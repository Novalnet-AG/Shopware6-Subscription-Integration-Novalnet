/*! For license information please see novalnet-subscription.js.LICENSE.txt */
!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=(window.__sw__.assetPath + '/bundles/novalnetsubscription/'),n(n.s="Ciui")}({Ciui:function(t,e,n){"use strict";n.r(e);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){s(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e,n){return(e=function(t){var e=function(t,e){if("object"!==i(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||"default");if("object"!==i(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===i(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var a=Shopware,l=a.Component,c=a.Mixin,u=(a.Filter,a.Context,Shopware.Data.Criteria),d=Shopware.Component.getComponentHelper(),p=(d.mapPropertyErrors,d.mapState),m=d.mapGetters;l.register("sw-product-detail-novalnet-subscription",{template:'{% block novalnet_card_subscription_product %}\n\t<sw-card v-if="product.extensions && product.extensions.novalnetConfiguration && acl.can(\'novalnet_subscription_product.viewer\')">\n\t\t{% block novalnet_card_subscription_product_basic_settings %}\n\t\t\t<sw-card :title="$tc(\'novalnet-subscription.settingForm.subscriptionTitle\')">\t\n\t\t\t\t<div v-html="subscriptionInformation" class="novalnet_payment-subscription-project">\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.active"\n\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'active\') != undefined"\n\t\t\t\t\t:inherited-value="getInheritValue(\'active\')"\n\t\t\t\t\t>\n\t\t\t\t\t<template #content="props">\t\t\t\t\t\n\t\t\t\t\t\t<sw-switch-field\n\t\t\t\t\t\t\tname="product.extensions.novalnetConfiguration.active"\n\t\t\t\t\t\t\t:map-inheritance="props"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.enableSubscriptionTitle\')"\n\t\t\t\t\t\t\t:disabled="props.isInherited"\n\t\t\t\t\t\t\t:value="props.currentValue"\n\t\t\t\t\t\t\t@change="props.updateCurrentValue"\n\t\t\t\t\t\t\tbordered>\n\t\t\t\t\t\t</sw-switch-field>\n\t\t\t\t\t</template>\n\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\n\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.displayName"\n\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'displayName\') != undefined"\n\t\t\t\t\t:inherited-value="getInheritValue(\'displayName\')"\n\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.displayNameTitle\')"\n\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.displayNameHelpText\')">\n\t\t\t\t\t<template #content="props">\t\t\t\t\t\n\t\t\t\t\t\t<sw-text-field name="product.extensions.novalnetConfiguration.displayName"\n\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t  :value="props.currentValue"\n\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</sw-text-field>\n\t\t\t\t\t</template>\n\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\n\t\t\t\t<sw-inherit-wrapper\n                    v-model="product.extensions.novalnetConfiguration.type"\n                    :has-parent="!!parentProduct.id && getInheritValue(\'type\')"\n                    :inherited-value="getInheritValue(\'type\')"\n                    :label="$tc(\'novalnet-subscription.settingForm.productSettings.productPurchaseTitle\')">\n                    <template #content="props">\n                        <sw-single-select name="product.extensions.novalnetConfiguration.type"\n                                          labelProperty="name"\n                                          valueProperty="id"\n                                          :options="subsSelectOptions"\n                                          :isInherited="props.isInherited"\n                                          :disabled="props.isInherited"\n                                          :value="props.currentValue == null ? defaultSubscriptionType : props.currentValue"\n                                          @change="updateCurrentTypeValue">\n                        </sw-single-select>\n                    </template>\n                </sw-inherit-wrapper>\n                \n                <sw-inherit-wrapper\n\t\t\t\t\tv-if="isPredefinedDisplay"\n                    v-model="product.extensions.novalnetConfiguration.predefinedSelection"\n                    :has-parent="!!parentProduct.id && getInheritValue(\'predefinedSelection\')"\n                    :inherited-value="getInheritValue(\'predefinedSelection\')"\n                    :label="$tc(\'novalnet-subscription.settingForm.productSettings.productPredefinedTitle\')">\n                    <template #content="props">\n                        <sw-single-select name="product.extensions.novalnetConfiguration.predefinedSelection"\n                                          labelProperty="name"\n                                          valueProperty="id"\n                                          :options="subsPredefinedOptions"\n                                          :isInherited="props.isInherited"\n                                          :disabled="props.isInherited"\n                                          :value="props.currentValue == null ? defaultPredefinedScope : props.currentValue"\n                                          @change="props.updateCurrentValue">\n                        </sw-single-select>\n                    </template>\n                </sw-inherit-wrapper>\n\t\t\t</sw-card>\n\t\t{% endblock %}\n\t\t{% block novalnet_card_subscription_product_interval_settings %}\n\t\t\t<sw-card :title="$tc(\'novalnet-subscription.settingForm.intervalTitle\')">\n\t\t\t\t<sw-container>\n\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.multipleSubscription"\n\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'multipleSubscription\') != undefined"\n\t\t\t\t\t\t:inherited-value="getInheritValue(\'multipleSubscription\')"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #content="props">\t\t\t\t\t\n\t\t\t\t\t\t\t<sw-switch-field\n\t\t\t\t\t\t\t\tname="product.extensions.novalnetConfiguration.multipleSubscription"\n\t\t\t\t\t\t\t\t:map-inheritance="props"\n\t\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.multipleSelectionHelpText\')"\n\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.multipleSelectionLabel\')"\n\t\t\t\t\t\t\t\t:disabled="props.isInherited"\n\t\t\t\t\t\t\t\t:value="props.currentValue"\n\t\t\t\t\t\t\t\t@change="updateMultipleSubscription"\n\t\t\t\t\t\t\t\tbordered>\n\t\t\t\t\t\t\t</sw-switch-field>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t</sw-container>\n\t\t\t\t\n\t\t\t\t<div v-if="!isMultipleAllowed">\n\t\t\t\t\t<sw-container>\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.period"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'period\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'period\')"\n\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.intervalPeriodHelpText\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.intervalPeriodLabel\')"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.period"\n\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t  :options="periodOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultSubscriptionPeriod : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t  @change="updatePeriod">\n\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t</sw-container>\n\t\t\t\t\t\n\t\t\t\t\t<sw-container columns="1fr 1fr" gap="15px">\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.interval"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'interval\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'interval\')"\n\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.intervalHelpText\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.intervalLabel\')"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.interval"\n\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t  :options="intervalOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultSubscriptionInterval : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t  @change="updateInterval">\n\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.subscriptionLength"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'subscriptionLength\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'subscriptionLength\')"\n\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.durationHelpText\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.durationLabel\')"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.subscriptionLength"\n\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t  :options="subsOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultSubscriptionLength : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t</sw-container>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div v-else>\n\t\t\t\t\t<sw-card-section :slim="true" style="padding: 0">\n\t\t\t\t\t\t<sw-container>\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\tv-model="mutiSelectOptions"\n\t\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'multiSubscriptionOptions\')"\n\t\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'multiSubscriptionOptions\')"\n\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.durationOptions\')"\n\t\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.multipleIntervalPeriodHelpText\')"\n\t\t\t\t\t\t\t\t:placeholder="$tc(\'novalnet-subscription.settingForm.productSettings.intervalPeriodPlaceholder\')"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t\t<sw-multi-select name="product.extensions.novalnetConfiguration.multiSubscriptionOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="displayFieldOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @change="updateMultipleSubsOptions">\n\t\t\t\t\t\t\t\t\t</sw-multi-select>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.operationalMonth"\n\t\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'operationalMonth\') != undefined"\n\t\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'operationalMonth\')"\n\t\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.durationMultipleHelpText\')"\n\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.durationMultipleLabel\')"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #content="props">\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<sw-number-field\n\t\t\t\t\t\t\t\t\t\tnumberType="int"\n\t\t\t\t\t\t\t\t\t\t:min="0"\n\t\t\t\t\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\t\t\t\t\t:disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t:value="props.currentValue"\n\t\t\t\t\t\t\t\t\t\t@change="props.updateCurrentValue"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</sw-number-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t</sw-card-section>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<sw-container columns="1fr 1fr" gap="15px">\n\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.freeTrial"\n\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'freeTrial\') != undefined"\n\t\t\t\t\t\t:inherited-value="getInheritValue(\'freeTrial\')"\n\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.freeTrialTitle\')"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.freeTrial"\n\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t  :options="freeTrialOptions"\n\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultSubscriptionLength : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.freeTrialPeriod"\n\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'freeTrialPeriod\')"\n\t\t\t\t\t\t:inherited-value="getInheritValue(\'freeTrialPeriod\')"\n\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.freeTrialPeriodHelptext\')"\n\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.freeTrialPeriodTitle\')"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.freeTrialPeriod"\n\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t  :options="freeTrialPeriodOptions"\n\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultSubscriptionPeriod : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t</sw-container>\n\t\t\t\t\n\t\t\t\t<sw-container>\n\t\t\t\t\t<sw-card-section :slim="true" style="padding: 0px;">\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.signUpFee"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'signUpFee\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'signUpFee\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.signUpFeeTitle\')"\n\t\t\t\t\t\t\t:placeholder="$tc(\'novalnet-subscription.settingForm.productSettings.signUpFeePlaceholder\')"\n\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.signUpFeeHelpText\')">\n\t\t\t\t\t\t\t<template #content="props">\t\t\t\t\t\n\t\t\t\t\t\t\t\t<sw-field type="number"\n\t\t\t\t\t\t\t\t\t\t  name="product.extensions.novalnetConfiguration.signUpFee"\n\t\t\t\t\t\t\t\t\t\t  :min="0"\n\t\t\t\t\t\t\t\t\t\t  :allowEmpty="true"\n\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue"\n\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #suffix>\n\t\t\t\t\t\t\t\t\t\t{{ maxValueSuffix }}\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</sw-field>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t</sw-card-section>\n\t\t\t\t</sw-container>\n\t\t\t\t\n\t\t\t\t<sw-container>\n\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.detailPageText"\n\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'detailPageText\') != undefined"\n\t\t\t\t\t\t:inherited-value="getInheritValue(\'detailPageText\')"\n\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.productPageText\')" \n\t\t\t\t\t\t:placeholder="$tc(\'novalnet-subscription.settingForm.productSettings.productPageTextDescription\')"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #content="props">\t\t\t\t\t\n\t\t\t\t\t\t\t<sw-textarea-field type="textarea" \n\t\t\t\t\t\t\t\t\tname="product.extensions.novalnetConfiguration.detailPageText"\n\t\t\t\t\t\t\t\t\t:disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t:value="props.currentValue"\n\t\t\t\t\t\t\t\t\t@change="props.updateCurrentValue"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</sw-textarea-field>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t</sw-container>\t\n\t\t\t</sw-card>\n\t\t{% endblock %}\n\t\t\n\t\t{% block novalnet_card_subscription_product_discount_settings %}\n\t\t\t\t<sw-card :title="$tc(\'novalnet-subscription.settingForm.discountTitle\')">\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<sw-container v-if="!isMultipleAllowed">\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.discountScope"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'discountScope\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'discountScope\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountScopeTitle\')"\n\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.discountScopeHelptext\')"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.discountScope"\n\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t  :options="discountScopeOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultDiscountScope : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t</sw-container>\n\t\t\t\t\t\n\t\t\t\t\t<sw-container v-if="!showDiscount && isMultipleAllowed">\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.discountScope"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'discountScope\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'discountScope\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountScopeTitle\')"\n\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.discountScopeHelptext\')"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.discountScope"\n\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t  :options="multipleDiscountScopeOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultDiscountScope : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t\n\t\t\t\t\t</sw-container>\n\t\t\t\t\t\n\t\t\t\t\t<div v-if="isMultipleAllowed" >\n\t\t\t\t\t\t<sw-container columns="1fr 1fr" gap="15px" v-if="showDiscount">\n\t\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.discountScope"\n\t\t\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'discountScope\') != undefined"\n\t\t\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'discountScope\')"\n\t\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountScopeTitle\')"\n\t\t\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.discountScopeHelptext\')"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.discountScope"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  :options="multipleDiscountScopeOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultDiscountScope : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue">\n\t\t\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<sw-inherit-wrapper  :helpText="$tc(\'novalnet-subscription.settingForm.productSettings.discountScopeHelptext\')" >\n\t\t\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t\t\t<sw-button @click="onAddDiscount" :disabled="disabled" variant="ghost" size="small" style= "width: 100%; margin-top: 5%; padding: 10px 20px; font-size: 15px;" >\n\n\t\t\t\t\t\t\t\t\t\t {{ $tc(\'novalnet-subscription.settingForm.productSettings.addDiscountTitle\') }}\n\t\t\t\t\t\t\t\t\t   </sw-button>\n\t\t\t\t\t\t\t\t\t</template> \n\t\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<sw-container columns="1fr 1fr" gap="15px" v-if="!showDiscount" >\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.discountType"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'discountType\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'discountType\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountTypeTitle\')"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #content="props">\n\t\t\t\t\t\t\t\t<sw-single-select name="product.extensions.novalnetConfiguration.discountType"\n\t\t\t\t\t\t\t\t\t\t\t\t  labelProperty="name"\n\t\t\t\t\t\t\t\t\t\t\t\t  valueProperty="id"\n\t\t\t\t\t\t\t\t\t\t\t\t  :options="discountTypeOptions"\n\t\t\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :is-inherited="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? defaultDiscountType : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t\t\t  @change="updateDiscountType">\n\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\tv-model="product.extensions.novalnetConfiguration.discount"\n\t\t\t\t\t\t\t:has-parent="!!parentProduct.id && getInheritValue(\'discount\') != undefined"\n\t\t\t\t\t\t\t:inherited-value="getInheritValue(\'discount\')"\n\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountAmount\')"\n\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.discountHelptext\')"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #content="props">\t\t\t\t\t\n\t\t\t\t\t\t\t\t<sw-field type="number"\n\t\t\t\t\t\t\t\t\t\t  :max="maxDiscountValue"\n\t\t\t\t\t\t\t\t\t\t  :min="0"\n\t\t\t\t\t\t\t\t\t\t  :allowEmpty="true"\n\t\t\t\t\t\t\t\t\t\t  :disabled="props.isInherited"\n\t\t\t\t\t\t\t\t\t\t  :value="props.currentValue == null ? 0 : props.currentValue"\n\t\t\t\t\t\t\t\t\t\t  @change="props.updateCurrentValue"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #suffix>\n\t\t\t\t\t\t\t\t\t\t<span v-if="isPercentageType">%</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else>{{ maxValueSuffix }}</span>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</sw-field>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t</sw-container>\n\t\t\t\t\t\n\t\t\t\t\t<div v-if ="isMultipleAllowed && isDiscountDetails" >\n\t\t\t\t\t\t<sw-card>\n\t\t\t\t\t\t\t<template #grid>\n\t\t\t\t\t\t\t\t<sw-data-grid\n\t\t\t\t\t\t\t\t\t:dataSource="discountDetailsInfo"\n\t\t\t\t\t\t\t\t\t:columns="getDiscountColums"\n\t\t\t\t\t\t\t\t\t:compactMode="false"\n\t\t\t\t\t\t\t\t\t:allowInlineEdit="true"\n\t\t\t\t\t\t\t\t\t:showSelection="false"\n\t\t\t\t\t\t\t\t\t:allowInlineDelete = "true"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<template #actions="{ item }">\n\t\t\t\t\t\t\t\t\t\t\t<sw-context-menu-item\n\t\t\t\t\t\t\t\t\t\t\t\tclass="sw-product-detail-base__review-edit" \n\t\t\t\t\t\t\t\t\t\t\t\t@click="discountUpdate(item)" \n\t\t\t\t\t\t\t\t\t\t\t\t:disabled="discountAction"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.settingForm.productSettings.edit\') }}\n\t\t\t\t\t\t\t\t\t\t\t</sw-context-menu-item>\n\t\t\t\t\t\t\t\t\t\t\t<sw-context-menu-item\n\t\t\t\t\t\t\t\t\t\t\t\tvariant="danger"\n\t\t\t\t\t\t\t\t\t\t\t\t@click="discountDelete(item)"\n\t\t\t\t\t\t\t\t\t\t\t\t:disabled="discountAction"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.settingForm.productSettings.delete\') }}\n\t\t\t\t\t\t\t\t\t\t\t</sw-context-menu-item>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</sw-data-grid>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</sw-card>\n\t\t\t\t\t</div>\n\t\t\t\t</sw-card>\n\t\t\t\t\n\t\t\t\t\n\t\t{% endblock %}\n\t\t\n\t\t{% block novalnet_card_subscription_product_basic_settings_action_toolbar_modals %}\n\t\t\t<sw-product-detail-novalnet-subscription-discount\n\t\t\t\tv-if="discountVisible"\n\t\t\t\t:product="product"\n\t\t\t\t:productId="productId"\n\t\t\t\t@modal-close="closeModals"\n\t\t\t\t@reload-product="reloadProductDetails">\n\t\t\t</sw-product-detail-novalnet-subscription-discount>\n\t\t\t\n\t\t\t<sw-product-detail-novalnet-subscription-discount-delete\n\t\t\t\tv-if="discountPeroidDelete"\n\t\t\t\t:product="product"\n\t\t\t\t:productId="productId"\n\t\t\t\t:item="discountDeleteItem"\n\t\t\t\t@modal-close="closeModals"\n\t\t\t\t@reload-product="reloadProductDetails">\n\t\t\t</sw-product-detail-novalnet-subscription-discount-delete>\n\t\t\t\n\t\t\t<sw-product-detail-novalnet-subscription-discount-update\n\t\t\t\tv-if="discountPeroidUpdate"\n\t\t\t\t:product="product"\n\t\t\t\t:productId="productId"\n\t\t\t\t:peroidItem="peroidItem"\n\t\t\t\t@modal-close="closeModals"\n\t\t\t\t@reload-product="reloadProductDetails">\n\t\t\t</sw-product-detail-novalnet-subscription-discount-update>\n\t\t{% endblock %}\n\t</sw-card>\n{% endblock %}\n',inject:["repositoryFactory","acl"],mixins:[c.getByName("notification"),c.getByName("sw-inline-snippet")],metaInfo:function(){return{title:"Product Subscription Settings"}},props:{productId:{type:String,required:!1,default:null}},data:function(){return{subscriptionInformation:this.$tc("novalnet-subscription.subscriptionInfo"),currencySymbol:null,isPercentageType:!0,isPredefinedDisplay:!0,defaultPredefinedScope:"subscription",defaultDiscountScope:"all",defaultDiscountType:"percentage",defaultSubscriptionType:"opt_abo",defaultSubscriptionPeriod:"days",defaultSubscriptionInterval:1,defaultSubscriptionLength:0,maxDiscountValue:100,mutiSelectOptions:null,subsOptions:[],freeTrialOptions:[],isMultipleAllowed:!1,showDiscount:!1,discountVisible:!1,discountDetailsInfo:[],discountPeroidDelete:!1,discountPeroidUpdate:!1,discountDeleteItem:{},isDiscountDetails:!1,disabled:!1,discountAction:!1,parentDetailsProduct:[]}},computed:r(r(r({},p("swProductDetail",["product","parentProduct","variants","isLoading"])),m("swProductDetail",["isLoading"])),{},{productCriteria:function(){var t=new u(1,25);return t.getAssociation("media").addSorting(u.sort("position","ASC")),t.getAssociation("properties").addSorting(u.sort("name","ASC",!0)),t.getAssociation("prices").addSorting(u.sort("quantityStart","ASC",!0)),t.getAssociation("tags").addSorting(u.sort("name","ASC")),t.getAssociation("seoUrls").addFilter(u.equals("isCanonical",!0)),t.getAssociation("crossSellings").addSorting(u.sort("position","ASC")).getAssociation("assignedProducts").addSorting(u.sort("position","ASC")).addAssociation("product").getAssociation("product").addAssociation("options.group"),t.addAssociation("cover").addAssociation("categories").addAssociation("visibilities.salesChannel").addAssociation("options").addAssociation("configuratorSettings.option").addAssociation("unit").addAssociation("productReviews").addAssociation("seoUrls").addAssociation("mainCategories").addAssociation("options.group").addAssociation("customFieldSets").addAssociation("featureSet").addAssociation("cmsPage").addAssociation("featureSet").addAssociation("downloads.media").addAssociation("novalnetConfiguration"),t.getAssociation("manufacturer").addAssociation("media"),t},currencyRepository:function(){return this.repositoryFactory.create("currency")},productRepository:function(){return this.repositoryFactory.create("product")},maxValueSuffix:function(){return this.currencySymbol},discountScopeOptions:function(){return[{id:"first",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountScopeOption1")},{id:"all",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountScopeOption2")},{id:"last",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountScopeOption3")}]},multipleDiscountScopeOptions:function(){return[{id:"first",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountScopeOption1")},{id:"all",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountScopeOption2")},{id:"last",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountScopeOption3")},{id:"cycleduration",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountScopeOption4")}]},subsPredefinedOptions:function(){return[{id:"subscription",name:this.$tc("novalnet-subscription.settingForm.productSettings.subsPredefinedOptions1")},{id:"standard",name:this.$tc("novalnet-subscription.settingForm.productSettings.subsPredefinedOptions2")}]},discountTypeOptions:function(){return[{id:"percentage",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption1")},{id:"fixed",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption2")}]},subsSelectOptions:function(){return[{id:"opt_abo",name:this.$tc("novalnet-subscription.settingForm.productSettings.productOption1")},{id:"only_abo",name:this.$tc("novalnet-subscription.settingForm.productSettings.productOption2")}]},periodOptions:function(){return[{id:"days",name:this.$tc("novalnet-subscription.settingForm.productSettings.intervalPeriodDay")},{id:"weeks",name:this.$tc("novalnet-subscription.settingForm.productSettings.intervalPeriodWeek")},{id:"months",name:this.$tc("novalnet-subscription.settingForm.productSettings.intervalPeriodMonth")},{id:"years",name:this.$tc("novalnet-subscription.settingForm.productSettings.intervalPeriodYear")}]},freeTrialPeriodOptions:function(){return[{id:"days",name:this.$tc("novalnet-subscription.settingForm.productSettings.daysLabel")},{id:"weeks",name:this.$tc("novalnet-subscription.settingForm.productSettings.weeksLabel")},{id:"months",name:this.$tc("novalnet-subscription.settingForm.productSettings.monthsLabel")}]},intervalOptions:function(){return[{id:1,name:this.$tc("novalnet-subscription.settingForm.productSettings.every")},{id:2,name:this.$tc("novalnet-subscription.settingForm.productSettings.every2")},{id:3,name:this.$tc("novalnet-subscription.settingForm.productSettings.every3")},{id:4,name:this.$tc("novalnet-subscription.settingForm.productSettings.every4")},{id:5,name:this.$tc("novalnet-subscription.settingForm.productSettings.every5")},{id:6,name:this.$tc("novalnet-subscription.settingForm.productSettings.every6")}]},displayFieldOptions:function(){return[{id:"dailyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.dailyDelivery")},{id:"weeklyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.weeklyDelivery")},{id:"Every2WeekDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every2WeekDelivery")},{id:"Every3WeekDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every3WeekDelivery")},{id:"monthlyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.monthlyDelivery")},{id:"Every6WeekDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every6WeekDelivery")},{id:"Every2MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every2MonthDelivery")},{id:"Every3MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every3MonthDelivery")},{id:"Every4MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every4MonthDelivery")},{id:"halfYearlyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.halfYearlyDelivery")},{id:"Every9MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every9MonthDelivery")},{id:"yearlyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.yearlyDelivery")}]},getDiscountColums:function(){return[{property:"period",dataIndex:"period",label:this.$tc("novalnet-subscription.settingForm.period"),width:"80px"},{property:"type",dataIndex:"type",label:this.$tc("novalnet-subscription.settingForm.productSettings.discountTypeTitle"),width:"80px"},{property:"periodterm",dataIndex:"periodterm",visible:!1},{property:"value",dataIndex:"value",label:this.$tc("novalnet-subscription.settingForm.productSettings.discountAmount"),width:"80px"}]}}),created:function(){this.createdComponent()},watch:{product:{handler:function(t){var e=this;if(void 0!==this.product.extensions){if(this.product.parentId&&this.loadParentProduct(),this.showDiscount=!1,this.isDiscountDetails=!1,this.isMultipleAllowed=!1,this.disabled=!1,null==this.product.extensions.novalnetConfiguration&&this.$set(this.product.extensions,"novalnetConfiguration",this.createAboConfigRepository().create()),["type","multipleSubscription","multiSubscriptionOptions","period","interval","subscriptionLength","freeTrial","freeTrialPeriod","discountType","discountScope","detailPageText","discountType","predefinedSelection","discountDetails"].forEach((function(t){null==e.product.extensions.novalnetConfiguration[t]&&(e.product.extensions.novalnetConfiguration[t]=null)})),null!=this.product.extensions.novalnetConfiguration.multipleSubscription&&1==this.product.extensions.novalnetConfiguration.multipleSubscription&&(this.isMultipleAllowed=!0),null!=this.product.extensions.novalnetConfiguration.multipleSubscription&&1!=this.product.extensions.novalnetConfiguration.multipleSubscription&&null!=this.product.extensions.novalnetConfiguration.discountScope&&"cycleduration"==this.product.extensions.novalnetConfiguration.discountScope&&(this.product.extensions.novalnetConfiguration.discountScope="all"),null!=this.product.extensions.novalnetConfiguration.discountDetails&&null!=this.product.extensions.novalnetConfiguration.discountDetails&&null!=this.product.extensions.novalnetConfiguration.discountScope&&"cycleduration"==this.product.extensions.novalnetConfiguration.discountScope&&(this.isDiscountDetails=!0),null!=this.product.extensions.novalnetConfiguration.type&&("opt_abo"==this.product.extensions.novalnetConfiguration.type||null==this.product.extensions.novalnetConfiguration.type?this.isPredefinedDisplay=!0:this.isPredefinedDisplay=!1),null!=this.product.extensions.novalnetConfiguration.discountScope&&"cycleduration"==this.product.extensions.novalnetConfiguration.discountScope&&(this.showDiscount=!0),null!=this.product.extensions.novalnetConfiguration.discountType&&("percentage"==this.product.extensions.novalnetConfiguration.discountType?(this.isPercentageType=!0,this.maxDiscountValue=100):(this.isPercentageType=!1,this.product.parentId&&null==this.product.price?this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(t){e.maxDiscountValue=t.price[0].gross})):this.maxDiscountValue=this.product.price[0].gross)),null!=this.product.extensions.novalnetConfiguration.multiSubscriptionOptions&&null!=this.product.extensions.novalnetConfiguration.multiSubscriptionOptions&&(null!=this.product.extensions.novalnetConfiguration.multiSubscriptionOptions.length&&this.product.extensions.novalnetConfiguration.multiSubscriptionOptions.length>0?this.mutiSelectOptions=this.product.extensions.novalnetConfiguration.multiSubscriptionOptions:null!=this.product.extensions.novalnetConfiguration.multiSubscriptionOptions.length&&0!=this.product.extensions.novalnetConfiguration.multiSubscriptionOptions.length||(this.mutiSelectOptions=null)),null==this.product.extensions.novalnetConfiguration.discountScope&&(this.disabled=!0),null==this.product.extensions.novalnetConfiguration.discountDetails&&(this.discountAction=!0),this.discountDetailsInfo=[],null!=this.product.extensions.novalnetConfiguration.discountDetails&&null!=this.product.extensions.novalnetConfiguration.discountDetails){var n=JSON.parse(this.product.extensions.novalnetConfiguration.discountDetails);null!=this.product.extensions.novalnetConfiguration.multipleSubscription&&1==this.product.extensions.novalnetConfiguration.multipleSubscription&&""!=n&&Object.values(n).forEach((function(t){e.discountDetailsInfo.push({period:e.$tc("novalnet-subscription.settingForm.productSettings."+t.period),periodterm:t.period,type:"fixed"==t.type?e.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption2"):e.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption1"),value:t.discount})}))}else this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(t){if(e.parentDetailsProduct=t,null!=e.parentDetailsProduct&&void 0!==e.parentDetailsProduct.extensions&&null!==e.parentDetailsProduct.extensions&&null!=e.parentDetailsProduct.extensions.novalnetConfiguration&&null!=e.parentDetailsProduct.extensions.novalnetConfiguration&&null!=e.parentDetailsProduct.extensions.novalnetConfiguration.discountDetails&&null!=e.parentDetailsProduct.extensions.novalnetConfiguration.discountDetails){var n=JSON.parse(e.parentDetailsProduct.extensions.novalnetConfiguration.discountDetails);null!=e.parentDetailsProduct.extensions.novalnetConfiguration.multipleSubscription&&1==e.parentDetailsProduct.extensions.novalnetConfiguration.multipleSubscription&&""!=n&&Object.values(n).forEach((function(t){e.discountDetailsInfo.push({period:e.$tc("novalnet-subscription.settingForm.productSettings."+t.period),periodterm:t.period,type:"fixed"==t.type?e.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption2"):e.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption1"),value:t.discount})}))}})).then((function(){}));this.setOptions(),this.setFreeTrial()}},deep:!0,immediate:!0}},methods:{createdComponent:function(){var t=this;this.currencyRepository.search(new u).then((function(e){t.currencies=e,t.defaultCurrency=t.currencies.find((function(t){return t.isSystemDefault})),t.currencySymbol=t.defaultCurrency.symbol})),this.product.parentId&&this.loadParentProduct(),this.$root.$on("product-reload",(function(){t.product.parentId&&t.loadParentProduct()}))},loadParentProduct:function(){var t=this;return Shopware.State.commit("swProductDetail/setLoading",["parentProduct",!0]),this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(e){t.parentProduct=e,Shopware.State.commit("swProductDetail/setParentProduct",e)})).then((function(){Shopware.State.commit("swProductDetail/setLoading",["parentProduct",!1])}))},createAboConfigRepository:function(){return this.repositoryFactory.create("novalnet_product_config")},updateMultipleSubscription:function(t){this.product.extensions.novalnetConfiguration.multipleSubscription=t,this.isMultipleAllowed=1==t},updateCurrentTypeValue:function(t){this.product.extensions.novalnetConfiguration.type=t,this.isPredefinedDisplay="only_abo"!=t},updateMultipleSubsOptions:function(t){this.product.extensions.novalnetConfiguration.multiSubscriptionOptions=t},updateDiscount:function(t){this.product.extensions.novalnetConfiguration.discount=t},onAddDiscount:function(){this.discountVisible=!0},discountDelete:function(t){this.discountDeleteItem=t,this.discountPeroidDelete=!0},discountUpdate:function(t){this.peroidItem=t,this.discountPeroidUpdate=!0},closeModals:function(){this.discountVisible=!1,this.discountPeroidDelete=!1,this.discountPeroidUpdate=!1},reloadProductDetails:function(){this.closeModals(),window.location.reload()},updateDiscountType:function(t){var e=this;this.product.extensions.novalnetConfiguration.discountType=t,this.product.extensions.novalnetConfiguration.discount=0,"percentage"==t?(this.isPercentageType=!0,this.maxDiscountValue=100):(this.isPercentageType=!1,this.product.parentId&&null==this.product.price?this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(t){e.maxDiscountValue=t.price[0].gross})):this.maxDiscountValue=this.product.price[0].gross)},updatePeriod:function(t){this.product.extensions.novalnetConfiguration.period=t},updateInterval:function(t){this.product.extensions.novalnetConfiguration.interval=t},getInheritValue:function(t){var e=this.parentProduct;return null!=e.extensions&&null!=e.extensions.novalnetConfiguration&&("multiSubscriptionOptions"!=t||null==e.extensions.novalnetConfiguration[t]||null!=e.extensions.novalnetConfiguration[t].length&&0!=e.extensions.novalnetConfiguration[t].length)?("multipleSubscription"==t&&1==e.extensions.novalnetConfiguration[t]&&null==this.product.extensions.novalnetConfiguration[t]&&(this.isMultipleAllowed=!0),"discountScope"!=t||"cycleduration"!=e.extensions.novalnetConfiguration[t]||null!=this.product.extensions.novalnetConfiguration[t]&&"cycleduration"!=this.product.extensions.novalnetConfiguration[t]||(this.showDiscount=!0,null!=e.extensions.novalnetConfiguration.discountDetails&&(this.isDiscountDetails=!0)),"type"==t&&"only_abo"==e.extensions.novalnetConfiguration[t]&&null==this.product.extensions.novalnetConfiguration.type&&(this.isPredefinedDisplay=!1),null!=e.extensions.novalnetConfiguration[t]?e.extensions.novalnetConfiguration[t]:null):null},setOptions:function(){var t=this;if(this.subsOptions=[],this.product.parentId)this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(e){t.subsOptions=[];var n=null!=t.product.extensions.novalnetConfiguration.period?t.product.extensions.novalnetConfiguration.period:null!=e.extensions.novalnetConfiguration&&null!=e.extensions.novalnetConfiguration.period?e.extensions.novalnetConfiguration.period:"days",i=null!=t.product.extensions.novalnetConfiguration.interval?t.product.extensions.novalnetConfiguration.interval:null!=e.extensions.novalnetConfiguration&&null!=e.extensions.novalnetConfiguration.interval?e.extensions.novalnetConfiguration.interval:1;if("months"==n)var o=24;else if("weeks"==n)o=54;else if("years"==n)o=12;else o=90;for(var r=0;r<=o;r++)0==r?t.subsOptions.push({id:r,name:t.$tc("novalnet-subscription.settingForm.productSettings.neverExpires")}):1==r&&r%i==0?t.subsOptions.push({id:r,name:r+" "+t.$tc("novalnet-subscription.settingForm.productSettings."+n+"SingleLabel")}):r%i==0&&t.subsOptions.push({id:r,name:r+" "+t.$tc("novalnet-subscription.settingForm.productSettings."+n+"Label")})}));else{var e,n,i=null!==(e=this.product.extensions.novalnetConfiguration.period)&&void 0!==e?e:"days",o=null!==(n=this.product.extensions.novalnetConfiguration.interval)&&void 0!==n?n:1;if("months"==i)var r=24;else if("weeks"==i)r=54;else if("years"==i)r=12;else r=90;for(var s=0;s<=r;s++)0==s?this.subsOptions.push({id:s,name:this.$tc("novalnet-subscription.settingForm.productSettings.neverExpires")}):1==s&&s%o==0?this.subsOptions.push({id:s,name:s+" "+this.$tc("novalnet-subscription.settingForm.productSettings."+i+"SingleLabel")}):s%o==0&&this.subsOptions.push({id:s,name:s+" "+this.$tc("novalnet-subscription.settingForm.productSettings."+i+"Label")})}},setFreeTrial:function(){var t=this;if(this.freeTrialOptions=[],this.product.parentId)this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(e){t.freeTrialOptions=[];var n=null!=t.product.extensions.novalnetConfiguration.freeTrialPeriod?t.product.extensions.novalnetConfiguration.freeTrialPeriod:null!=e.extensions.novalnetConfiguration&&null!=e.extensions.novalnetConfiguration.freeTrialPeriod?e.extensions.novalnetConfiguration.freeTrialPeriod:"days";if("months"==n)var i=24;else if("weeks"==n)i=54;else i=90;for(var o=0;o<=i;o++)0==o?t.freeTrialOptions.push({id:o,name:t.$tc("novalnet-subscription.settingForm.productSettings.freeTrialEmpty")}):1==o?t.freeTrialOptions.push({id:o,name:o+" "+t.$tc("novalnet-subscription.settingForm.productSettings."+n+"SingleLabel")}):t.freeTrialOptions.push({id:o,name:o+" "+t.$tc("novalnet-subscription.settingForm.productSettings."+n+"Label")})}));else{var e,n=null!==(e=this.product.extensions.novalnetConfiguration.freeTrialPeriod)&&void 0!==e?e:"days";if("months"==n)var i=24;else if("weeks"==n)i=54;else i=90;for(var o=0;o<=i;o++)0==o?this.freeTrialOptions.push({id:o,name:this.$tc("novalnet-subscription.settingForm.productSettings.freeTrialEmpty")}):1==o?this.freeTrialOptions.push({id:o,name:o+" "+this.$tc("novalnet-subscription.settingForm.productSettings."+n+"SingleLabel")}):this.freeTrialOptions.push({id:o,name:o+" "+this.$tc("novalnet-subscription.settingForm.productSettings."+n+"Label")})}}}});function b(t){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function v(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){g(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function g(t,e,n){return(e=function(t){var e=function(t,e){if("object"!==b(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,e||"default");if("object"!==b(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===b(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var f=Shopware,y=f.Component,w=f.Mixin,S=(f.Filter,f.Context),x=Shopware.Data.Criteria,C=(Shopware.Utils.format.currency,Shopware.Component.getComponentHelper().mapState);y.register("sw-product-detail-novalnet-subscription-discount",{template:'{% block novalnet_subscription_product_discount_setting %}\n    <sw-modal :title="$tc(\'novalnet-subscription.settingForm.discountTitle\')"\n              @modal-close="closeModal">\n\t\t\n\t\t\t{% block novalnet_subscription_product_discount_setting_content %}\n\t\t\t\t<template #default>\n\n\t\t\t\t\t{% block novalnet_subscription_product_discount_setting_info_text %}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<sw-container >\n\t\t\t\t\t\t\t\t<sw-single-select v-model="cycle" \n\t\t\t\t\t\t\t\t\tlabelProperty="name"\n\t\t\t\t\t\t\t\t\tvalueProperty="id"\n\t\t\t\t\t\t\t\t\t:options="displayFieldOptions" \n\t\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.period\')"\n\t\t\t\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t\t\n\t\t\t\t\t    <sw-container >\n\t\t\t\t\t\t\t<sw-single-select v-model="discountType"\n\t\t\t\t\t\t\t\tlabelProperty="name"\n\t\t\t\t\t\t\t\tvalueProperty="id"\n\t\t\t\t\t\t\t\t:options="discountTypeOptions" \n\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountTypeTitle\')"\n\t\t\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t@change="updateDiscountType">\n\t\t\t\t\t\t    </sw-single-select>\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t\t<sw-container >\n\t\t\t\t\t\t\t\t<sw-field type="number" \n\t\t\t\t\t\t\t\t\tv-model ="discountValue"\n\t\t\t\t\t\t\t\t   :label="$tc(\'novalnet-subscription.settingForm.productSettings.discountAmount\')"\n\t\t\t\t\t\t\t\t   :max="maxDiscountValue"\n\t\t\t\t\t\t\t\t   :min="1"\n\t\t\t\t\t\t\t\t   :allowEmpty="false"\n\t\t\t\t\t\t\t\t   required\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #suffix>\n\t\t\t\t\t\t\t\t\t<span v-if="isPercentageType">%</span>\n\t\t\t\t\t\t\t\t\t<span v-else>{{ maxValueSuffix }}</span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-field>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t{% endblock %}\n\n\t\t\t{% block novalnet_subscription_product_discount_setting_actions %}\n\t\t\t\t<template #modal-footer>\n\n\t\t\t\t\t{% block novalnet_subscription_product_discount_setting_confirm %}\n\t\t\t\t\t\t<sw-button secondary slim variant="primary" @click="novalnetdiscount" >\n\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.settingForm.productSettings.addDiscountbutton\') }}\n\t\t\t\t\t\t</sw-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t{% endblock %}\n    </sw-modal>\n{% endblock %}\n',props:{productId:{type:String,required:!0},product:{type:Object,required:!0}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[w.getByName("notification"),w.getByName("sw-inline-snippet")],data:function(){return{cycle:"dailyDelivery",discountType:"percentage",discountValue:1,createNovalnetProduct:!1,updatedNovalnetProduct:!1,novalnetProduct:{},isPercentageType:!0,maxDiscountValue:100,currencySymbol:null}},computed:v(v({},C("swProductDetail",["product","parentProduct","loading"])),{},{displayFieldOptions:function(){return[{id:"dailyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.dailyDelivery")},{id:"weeklyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.weeklyDelivery")},{id:"Every2WeekDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every2WeekDelivery")},{id:"Every3WeekDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every3WeekDelivery")},{id:"monthlyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.monthlyDelivery")},{id:"Every6WeekDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every6WeekDelivery")},{id:"Every2MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every2MonthDelivery")},{id:"Every3MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every3MonthDelivery")},{id:"Every4MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every4MonthDelivery")},{id:"halfYearlyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.halfYearlyDelivery")},{id:"Every9MonthDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.Every9MonthDelivery")},{id:"yearlyDelivery",name:this.$tc("novalnet-subscription.settingForm.productSettings.yearlyDelivery")}]},discountTypeOptions:function(){return[{id:"percentage",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption1")},{id:"fixed",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption2")}]},currencyRepository:function(){return this.repositoryFactory.create("currency")},productRepository:function(){return this.repositoryFactory.create("product")},maxValueSuffix:function(){return this.currencySymbol}}),created:function(){this.createdComponent()},watch:{product:{handler:function(t){var e=this;if(""!=this.product&&null!=this.product.extensions&&null!=this.product.extensions.novalnetConfiguration&&(null!=this.product.extensions.novalnetConfiguration.discountType&&("percentage"==this.discountType?(this.isPercentageType=!0,this.maxDiscountValue=100):(this.isPercentageType=!1,this.product.parentId&&null==this.product.price?this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(t){e.maxDiscountValue=t.price[0].gross})):this.maxDiscountValue=this.product.price[0].gross)),1==this.product.extensions.novalnetConfiguration._isNew)){if(null!=this.product.parentId){var n=this.repositoryFactory.create("novalnet_product_config"),i=new x(1,1);i.addFilter(x.equals("productId",this.product.parentId)),n.search(i,S.api).then((function(t){e.novalnetProduct=t.first(),""!=novalnetProduct&&(e.updatedNovalnetProduct=!0)})).finally((function(){e.updatedNovalnetProduct=!1}))}null==this.product.extensions.novalnetConfiguration.type&&(this.product.extensions.novalnetConfiguration.type=1==this.updatedNovalnetProduct?this.novalnetProduct.type:"opt_abo"),null==this.product.extensions.novalnetConfiguration.predefinedSelection&&(this.product.extensions.novalnetConfiguration.predefinedSelection=1==this.updatedNovalnetProduct?this.novalnetProduct.predefinedSelection:"subscription"),null==this.product.extensions.novalnetConfiguration.interval&&(this.product.extensions.novalnetConfiguration.interval=1==this.updatedNovalnetProduct?this.novalnetProduct.interval:1),null==this.product.extensions.novalnetConfiguration.period&&(this.product.extensions.novalnetConfiguration.period=1==this.updatedNovalnetProduct?this.novalnetProduct.period:"days"),null==this.product.extensions.novalnetConfiguration.freeTrial&&(this.product.extensions.novalnetConfiguration.freeTrial=1==this.updatedNovalnetProduct?this.novalnetProduct.freeTrial:0),null==this.product.extensions.novalnetConfiguration.freeTrialPeriod&&(this.product.extensions.novalnetConfiguration.freeTrialPeriod=1==this.updatedNovalnetProduct?this.novalnetProduct.freeTrialPeriod:"days"),null==this.product.extensions.novalnetConfiguration.subscriptionLength&&(this.product.extensions.novalnetConfiguration.subscriptionLength=1==this.updatedNovalnetProduct?this.novalnetProduct.subscriptionLength:0),null==this.product.extensions.novalnetConfiguration.discount&&(this.product.extensions.novalnetConfiguration.discount=1==this.updatedNovalnetProduct?this.novalnetProduct.discount:0),null==this.product.extensions.novalnetConfiguration.discountType&&(this.product.extensions.novalnetConfiguration.discountType=1==this.updatedNovalnetProduct?this.novalnetProduct.discountType:"percentage"),null==this.product.extensions.novalnetConfiguration.discountScope&&(this.product.extensions.novalnetConfiguration.discountScope=1==this.updatedNovalnetProduct?this.novalnetProduct.discountScope:"all"),null==this.product.extensions.novalnetConfiguration.active&&(this.product.extensions.novalnetConfiguration.active=1!=this.updatedNovalnetProduct||this.novalnetProduct.active),null==this.product.extensions.novalnetConfiguration.signUpFee&&(this.product.extensions.novalnetConfiguration.signUpFee=1==this.updatedNovalnetProduct?this.novalnetProduct.signUpFee:null),null==this.product.extensions.novalnetConfiguration.multiSubscriptionOptions&&(this.product.extensions.novalnetConfiguration.multiSubscriptionOptions=1==this.updatedNovalnetProduct?this.novalnetProduct.multiSubscriptionOptions:null),null==this.product.extensions.novalnetConfiguration.operationalMonth&&(this.product.extensions.novalnetConfiguration.operationalMonth=1==this.updatedNovalnetProduct?this.novalnetProduct.operationalMonth:0)}},deep:!0,immediate:!0}},methods:{createdComponent:function(){var t=this;this.currencyRepository.search(new x).then((function(e){t.currencies=e,t.defaultCurrency=t.currencies.find((function(t){return t.isSystemDefault})),t.currencySymbol=t.defaultCurrency.symbol}))},novalnetdiscount:function(){var t=this,e=this.cycle,n=this.discountType,i=this.discountValue;null!=e&&null!=n&&null!=i?this.NovalPaymentSubsService.novalnetDiscount(e,n,i,this.product).then((function(e){null!=e.success&&""!=e.success&&1==e.success?t.createNotificationSuccess({message:t.$tc("novalnet-subscription.settingForm.productSettings.discountSucess")}):t.createNotificationError({message:e.errorMessage}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})})):this.createNotificationError({message:this.$tc("novalnet-subscription.settingForm.productSettings.emptyError")})},closeModal:function(){this.$emit("modal-close")},updateDiscountType:function(t){var e=this;this.discountValue=1,"percentage"==t?(this.isPercentageType=!0,this.maxDiscountValue=100):(this.isPercentageType=!1,this.product.parentId&&null==this.product.price?this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(t){e.maxDiscountValue=t.price[0].gross})):this.maxDiscountValue=this.product.price[0].gross)}}});var _=Shopware,P=_.Component,D=_.Mixin;_.Filter,_.Context,Shopware.Data.Criteria,Shopware.Utils.format.currency;P.register("sw-product-detail-novalnet-subscription-discount-delete",{template:'{% block novalnet_subscription_product_discount_delete %}\n    <sw-modal :title="$tc(\'novalnet-subscription.settingForm.warning\')"\n              @modal-close="closeModal">\n\t\t\n\t\t\t{% block novalnet_subscription_product_discount_delete_content %}\n\t\t\t\t<template #default>\n\n\t\t\t\t\t{% block novalnet_subscription_product_discount_delete_info_text %}\n\t\t\t\t\t\t<sw-container columns="1fr" gap="0px 30px">\n\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.settingForm.productSettings.discountDelete\') }} \n\t\t\t\t\t    </sw-container>\n\t\t\t\t\t\t\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t{% endblock %}\n\n\t\t\t{% block novalnet_subscription_product_discount_delete_actions %}\n\t\t\t\t<template #modal-footer>\n\n\t\t\t\t\t{% block novalnet_subscription_product_discount_delete_cancel %}\n\t\t\t\t\t\t<sw-button secondary slim variant="primary" @click="onDiscountCancel" >\n\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.list.buttonCancel\') }}\n\t\t\t\t\t\t</sw-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\n\t\t\t\t\t{% block novalnet_subscription_product_discount_setting_confirm %}\n\t\t\t\t\t\t<sw-button secondary slim variant="primary" @click="onDiscountDelete" >\n\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.list.buttonDelete\') }}\n\t\t\t\t\t\t</sw-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t{% endblock %}\n    </sw-modal>\n{% endblock %}\n',props:{productId:{type:String,required:!0},product:{type:Object,required:!0},item:{type:Object,required:!0}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[D.getByName("notification"),D.getByName("sw-inline-snippet")],methods:{onDiscountCancel:function(){this.closeModal()},onDiscountDelete:function(){var t=this,e=this.item;this.NovalPaymentSubsService.discountDelete(e,this.product.id).then((function(e){1==e.success?t.createNotificationSuccess({message:t.$tc("novalnet-subscription.settingForm.productSettings.discountDeleteSuccess")}):t.createNotificationError({message:e.errorMessage}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})}))},closeModal:function(){this.$emit("modal-close")}}});var T=Shopware,k=T.Component,N=T.Mixin,I=(T.Filter,T.Context,Shopware.Data.Criteria);Shopware.Utils.format.currency;k.register("sw-product-detail-novalnet-subscription-discount-update",{template:'{% block novalnet_subscription_product_discount_update %}\n    <sw-modal :title="$tc(\'novalnet-subscription.settingForm.updatedDiscountTitle\')"\n              @modal-close="closeModal">\n\t\t\n\t\t\t{% block novalnet_subscription_product_discount_update_content %}\n\t\t\t\t<template #default>\n\n\t\t\t\t\t{% block novalnet_subscription_product_discount_update_info_text %}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<sw-container >\n\t\t\t\t\t\t\t<sw-text-field \n\t\t\t\t\t\t\t\tv-model="cycle"\n\t\t\t\t\t\t\t\t:disabled="true"\n\t\t\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.renewalIntervalHelpText\')"\n\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.period\')"\n\t\t\t\t\t\t\t\trequired>\n\t\t\t\t\t\t\t</sw-text-field>\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t\t\n\t\t\t\t\t    <sw-container >\n\t\t\t\t\t\t\t<sw-single-select v-model="discountType"\n\t\t\t\t\t\t\t\tlabelProperty="name"\n\t\t\t\t\t\t\t\tvalueProperty="id"\n\t\t\t\t\t\t\t\t:options="discountTypeOptions" \n\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountTypeTitle\')"\n\t\t\t\t\t\t\t\t@change="updateDiscountType"\n\t\t\t\t\t\t\t\trequired>\n\t\t\t\t\t\t    </sw-single-select>\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t\t<sw-container>\n\t\t\t\t\t\t\t<sw-field type="number"  \n\t\t\t\t\t\t\t\tv-model ="discountValue"\n\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.discountAmount\')"\n\t\t\t\t\t\t\t\t:max="maxDiscountValue"\n\t\t\t\t\t\t\t\t:min="1"\n\t\t\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #suffix>\n\t\t\t\t\t\t\t\t\t<span v-if="isPercentageType">%</span>\n\t\t\t\t\t\t\t\t\t<span v-else>{{ maxValueSuffix }}</span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-field>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t{% endblock %}\n\n\t\t\t{% block novalnet_subscription_product_discount_setting_actions %}\n\t\t\t\t<template #modal-footer>\n\n\t\t\t\t\t{% block novalnet_subscription_product_discount_setting_confirm %}\n\t\t\t\t\t\t<sw-button secondary slim variant="primary" @click="novalnetdiscount" >\n\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.settingForm.productSettings.updateDiscountbutton\') }}\n\t\t\t\t\t\t</sw-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t{% endblock %}\n    </sw-modal>\n{% endblock %}\n',props:{productId:{type:String,required:!0},product:{type:Object,required:!0},peroidItem:{type:Object,required:!0}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[N.getByName("notification"),N.getByName("sw-inline-snippet")],data:function(){return{cycle:"",discountType:"",discountValue:1,isPercentageType:!0,maxDiscountValue:100,currencySymbol:null}},computed:{discountTypeOptions:function(){return[{id:"percentage",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption1")},{id:"fixed",name:this.$tc("novalnet-subscription.settingForm.productSettings.discountTypeOption2")}]},currencyRepository:function(){return this.repositoryFactory.create("currency")},productRepository:function(){return this.repositoryFactory.create("product")},maxValueSuffix:function(){return this.currencySymbol}},created:function(){this.createdComponent()},watch:{product:{handler:function(t){var e=this;""!=this.peroidItem&&(this.cycle=this.peroidItem.period,this.discountType="Percentage"==this.peroidItem.type?"percentage":"fixed",this.discountValue=this.peroidItem.value,"Percentage"==this.peroidItem.type?(this.isPercentageType=!0,this.maxDiscountValue=100):(this.isPercentageType=!1,this.product.parentId&&null==this.product.price?this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(t){e.maxDiscountValue=t.price[0].gross})):this.maxDiscountValue=this.product.price[0].gross))},deep:!0,immediate:!0}},methods:{createdComponent:function(){var t=this;this.currencyRepository.search(new I).then((function(e){t.currencies=e,t.defaultCurrency=t.currencies.find((function(t){return t.isSystemDefault})),t.currencySymbol=t.defaultCurrency.symbol}))},novalnetdiscount:function(){var t=this,e=this.cycle,n=this.discountType,i=this.discountValue;null!=e&&null!=n&&null!=i?this.NovalPaymentSubsService.discountUpdate(e,n,i,this.peroidItem.periodterm,this.product.id).then((function(e){null!=e.success&&e.success,1==e.success?t.createNotificationSuccess({message:t.$tc("novalnet-subscription.settingForm.productSettings.discountUpdate")}):t.createNotificationError({message:e.errorMessage}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})})):this.createNotificationError({message:this.$tc("novalnet-subscription.settingForm.productSettings.emptyError")})},closeModal:function(){this.$emit("modal-close")},updateDiscountType:function(t){var e=this;this.discountValue=1,"percentage"==t?(this.isPercentageType=!0,this.maxDiscountValue=100):(this.isPercentageType=!1,this.product.parentId&&null==this.product.price?this.productRepository.get(this.product.parentId,Shopware.Context.api,this.productCriteria).then((function(t){e.maxDiscountValue=t.price[0].gross})):this.maxDiscountValue=this.product.price[0].gross)}}});n("hvWm");var A=Shopware,$=A.Component,O=A.Mixin,E=(A.Defaults,Shopware.Data.Criteria);$.register("novalnet-subsctiption-overview",{template:'{% block novalnet_subscription_overview_list %}\n\t<sw-page class="sw-novalnet-subscription-orders-list">\n        \n        {% block novalnet_subscription_list_search_bar %}\n            <template #search-bar>\n                <sw-search-bar initialSearchType="novalnet_subscription"\n\t\t\t\t\t\t\t   :initialSearch="term"\n\t\t\t\t\t\t\t   @search="onSearch">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n        \n        {% block novalnet_subscription_overview_list_header %}\n            <template #smart-bar-header>\n                {% block novalnet_subscription_overview_list_header_title %}\n                    <h2>\n                        {% block novalnet_subscription_overview_list_header_title_text %}\n                            {{ $tc(\'novalnet-subscription.list.subsctiptionOrders\') }}\n                        {% endblock %}\n\n                        {% block novalnet_subscription_overview_list_header_amount %}\n                            <span v-if="!isLoading" class="sw-page__smart-bar-amount">\n                                ({{ total }})\n                            </span>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        \n        {% block novalnet_subscription_overview_list_content %}\n\t\t\t<template #content>\n\t\t\t\t{% block novalnet_subscription_overview_list_grid %}\n\t\t\t\t\t<div class="sw-product-list__content">\n\n\t\t\t\t\t\t{% block novalnet_subcription_list_grid %}\n\t\t\t\t\t\t\t<sw-data-grid :dataSource="subscriptions"\n                                          :columns="subscriptionColumns"\n                                          :fullPage="true"\n                                          :showSettings="true"\n                                          :showSelection="true"\n                                          :sortBy="sortBy"\n                                          :sortDirection="sortDirection"\n                                          :isLoading="isLoading"\n                                          :allowColumnEdit="true"\n                                          identifier="novalnet-subsctiption-overview"\n                                          @update-records="updateTotal"\n                                          @column-sort="onSortColumn"\n                                          @page-change="onPageChange"\n                                          @selection-change="updateSelection"\n                                          :disableDataFetching="true">\n                                          \n\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_grid_columns_active %}\n\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_grid_columns %}\n\t\t\t\t\t\t\t\t\t<template #column-Sno="{ item }">\n\t\t\t\t\t\t\t\t\t\t{{ item.subsNumber }}\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<template #column-order.salesChannel.name="{ item }">\n\t\t\t\t\t\t\t\t\t\t{{ item.order.salesChannel.name }}\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<template #column-order.orderCustomer.firstName="{ item }">\n\t\t\t\t\t\t\t\t\t\t<router-link\n\t\t\t\t\t\t\t\t\t\t\t:to="{ name: \'sw.customer.detail\', params: { id: item.order.orderCustomer.customerId } }">\n\t\t\t\t\t\t\t\t\t\t\t{{ item.order.orderCustomer.firstName }} {{ item.order.orderCustomer.lastName }}\n\t\t\t\t\t\t\t\t\t\t</router-link>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-countItems="{ item }">\n\t\t\t\t\t\t\t\t\t\t{{ item.order.lineItems.length }}\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-amount="{ item }">\n\t\t\t\t\t\t\t\t\t\t{{ item.amount | currency(item.order.currency.translated.shortName) }}\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-status="{ item }">\n\t\t\t\t\t\t\t\t\t\t<sw-label :variant="getVariantFromOrderState(item.status)" appearance="pill">\n\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.status.\' + item.status.toLowerCase()) }}\n\t\t\t\t\t\t\t\t\t\t</sw-label>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-interval="{ item }">\n\t\t\t\t\t\t\t\t\t\t{{ item.interval }} {{ $tc(\'novalnet-subscription.intervals.\' + item.unit.toLowerCase()) }}\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-length="{ item }">\n\t\t\t\t\t\t\t\t\t\t<div v-if="item.length">\n\t\t\t\t\t\t\t\t\t\t\t{{ item.length }} {{ $tc(\'novalnet-subscription.intervals.\' + item.unit.toLowerCase()) }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div v-else>\n\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.intervals.endlessSubscription\') }}\n\t\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-endingAt="{ item }">\n\t\t\t\t\t\t\t\t\t\t<div v-if="item.length">\n\t\t\t\t\t\t\t\t\t\t\t{{ item.endingAt | date({hour: \'2-digit\', minute: \'2-digit\'}) }}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div v-else>\n\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.intervals.untilCanceled\') }}\n\t\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-createdAt="{ item }">\n\t\t\t\t\t\t\t\t\t\t{{ item.createdAt | date({hour: \'2-digit\', minute: \'2-digit\'}) }}\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #column-customer.customerNumber="{ item }">\n\t\t\t\t\t\t\t\t\t\t<router-link :to="{ name: \'sw.customer.detail\', params: { id: item.order.orderCustomer.customerId } }">\n\t\t\t\t\t\t\t\t\t\t\t{{ item.order.orderCustomer.customerNumber }}\n\t\t\t\t\t\t\t\t\t\t</router-link>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_grid_columns_actions %}\n\t\t\t\t\t\t\t\t\t<template #actions="{ item }">\n                                        {% block novalnet_subcription_list_grid_columns_actions_view %}\n                                            <sw-context-menu-item class="novalnet-subscription-detail-view-action" :routerLink="{ name: \'novalnet.subsctiption.detail.base\', params: { id: item.id } }">\n                                                {{ $tc(\'novalnet-subscription.list.contextMenuView\') }}\n                                            </sw-context-menu-item>\n                                        {% endblock %}\n                                        {% block novalnet_subcription_list_grid_columns_actions_delete %}\n                                            <sw-context-menu-item\n                                                variant="danger"\n                                                :disabled="disableDeletion(item.order)"\n                                                @click="onDelete(item.id)">\n                                                {{ $tc(\'novalnet-subscription.list.contextMenuDelete\') }}\n                                            </sw-context-menu-item>\n                                        {% endblock %}\n                                    </template>\n\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_grid_action_modals %}\n\t\t\t\t\t\t\t\t\t<template #action-modals="{ item }">\n\t\t\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_delete_modal %}\n\t\t\t\t\t\t\t\t\t\t\t<sw-modal v-if="showDeleteModal === item.id"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @modal-close="onCloseDeleteModal"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  :title="$tc(\'global.default.warning\')"\n\t\t\t\t\t\t\t\t\t\t\t\t\t  variant="small">\n\t\t\t\t\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_delete_modal_confirm_delete_text %}\n\t\t\t\t\t\t\t\t\t\t\t\t<p class="novalnet-subcription-list__confirm-delete-text">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.list.textDeleteConfirm\', 0, { subsNumber: `${item.subsNumber}` }) }}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_delete_modal_footer %}\n\t\t\t\t\t\t\t\t\t\t\t\t<template #modal-footer>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_delete_modal_cancel %}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<sw-button @click="onCloseDeleteModal" size="small">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.list.buttonCancel\') }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</sw-button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_delete_modal_confirm %}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<sw-button @click="onConfirmDelete(item.id)" variant="danger" size="small">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.list.buttonDelete\') }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</sw-button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\t\t\t</sw-modal>\n\t\t\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t\t\t</template>\n                                {% endblock %}\n                                \n                                <template #pagination>\n                                    {% block sw_order_list_grid_pagination %}\n                                        <sw-pagination :page="page"\n                                                       :limit="limit"\n                                                       :total="total"\n                                                       :total-visible="7"\n                                                       @page-change="onPageChange">\n                                        </sw-pagination>\n                                    {% endblock %}\n                                </template>\n\t\t\t\t\t\t\t</sw-data-grid>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block novalnet_subcription_list_empty_state %}\n\t\t\t\t\t\t<sw-empty-state v-if="!isLoading && !total" :title="$tc(\'novalnet-subscription.list.messageEmpty\')"></sw-empty-state>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block novalnet_subcription_list_grid_loader %}\n\t\t\t\t\t\t<sw-loader v-if="isLoading"></sw-loader>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n        {% endblock %}\n        \n        {% block novalnet_subcription_list_sidebar %}\n\t\t\t<template #sidebar>\n\t\t\t\t<sw-sidebar class="novalnet-subcription-list__sidebar">\n\t\t\t\t\t{% block novalnet_subcription_list_sidebar_refresh %}\n\t\t\t\t\t<sw-sidebar-item\n\t\t\t\t\t\ticon="regular-undo"\n\t\t\t\t\t\t:title="$tc(\'sw-product.list.titleSidebarItemRefresh\')"\n\t\t\t\t\t\t@click="onRefresh">\n\t\t\t\t\t</sw-sidebar-item>\n\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t{% block novalnet_subcription_list_sidebar_filter %}\n\t\t\t\t\t\t<sw-sidebar-item icon="regular-filter"\n\t\t\t\t\t\t\t\t\t\t :title="$tc(\'sw-customer.list.titleSidebarItemFilter\')">\n\n\t\t\t\t\t\t\t{% block novalnet_subcription_list_sidebar_filter_items %}\n\n\t\t\t\t\t\t\t\t{% block novalnet_subcription_list_sidebar_filter_status %}\n\t\t\t\t\t\t\t\t\t<sw-multi-select\n\t\t\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.list.status\')"\n\t\t\t\t\t\t\t\t\t\t:options="availableStatus"\n\t\t\t\t\t\t\t\t\t\t:isLoading="filterLoading"\n\t\t\t\t\t\t\t\t\t\tvalueProperty="key"\n\t\t\t\t\t\t\t\t\t\tlabelProperty="translated"\n\t\t\t\t\t\t\t\t\t\t:value="statusFilter"\n\t\t\t\t\t\t\t\t\t\t@change="onChangeStatusFilter">\n\t\t\t\t\t\t\t\t\t</sw-multi-select>\n\t\t\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t</sw-sidebar-item>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</sw-sidebar>\n\t\t\t</template>\n\t\t{% endblock %}\n    \n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","numberRangeService","acl","filterFactory"],data:function(){return{subscriptions:[],sortBy:"subsNumber",sortDirection:"DESC",naturalSorting:!0,isLoading:!1,isBulkLoading:!1,showDeleteModal:!1,total:0,page:1,filterLoading:!1,availableStatus:[],statusFilter:[]}},mixins:[O.getByName("notification"),O.getByName("listing"),O.getByName("placeholder")],metaInfo:function(){return{title:this.$createTitle()}},created:function(){this.loadFilterValues(),this.getList()},computed:{subscriptionRepository:function(){return this.repositoryFactory.create("novalnet_subscription")},subscriptionColumns:function(){return this.getSubscriptionColumns()},filterSelectCriteria:function(){var t=new E(1,1);return t.addFilter(E.not("AND",[E.equals("status",null)])),t.addAggregation(E.terms("status","status")),t}},methods:{getList:function(){var t=this;this.isLoading=!0;var e=new E(this.page,this.limit);return e.setTerm(this.term),e.addAssociation("order"),e.addAssociation("order.salesChannel"),e.addAssociation("order.orderCustomer"),e.addAssociation("order.currency"),e.addAssociation("order.lineItems"),e.getAssociation("order.transactions").addSorting(E.sort("createdAt")),this.statusFilter.length>0&&e.addFilter(E.equalsAny("status",this.statusFilter)),e.addSorting(E.sort(this.sortBy,this.sortDirection)),Promise.all([this.subscriptionRepository.search(e,Shopware.Context.api)]).then((function(e){t.subscriptions=[],t.total=e[0].total,e[0].forEach((function(e,n){e.length=e.length*e.interval,t.subscriptions.push(e)})),t.isLoading=!1,t.selection={}})).catch((function(){t.isLoading=!1}))},disableDeletion:function(t){return!this.acl.can("order.deleter")||t.documents.length>0},onCloseDeleteModal:function(){this.showDeleteModal=!1},loadFilterValues:function(){var t=this;return this.filterLoading=!0,this.subscriptionRepository.search(this.filterSelectCriteria,Shopware.Context.api).then((function(e){var n=e.aggregations;return n.status.buckets.forEach((function(e,i){n.status.buckets[i].translated=t.$tc("novalnet-subscription.status."+e.key.toLowerCase())})),t.availableStatus=n.status.buckets,t.filterLoading=!1,n})).catch((function(){t.filterLoading=!1}))},onDelete:function(t){this.showDeleteModal=t},getSubscriptionColumns:function(){return[{property:"subsNumber",dataIndex:"subsNumber",label:"novalnet-subscription.list.subscriptionOrderNumber",allowResize:!0,routerLink:"novalnet.subsctiption.detail.base",primary:!0},{property:"order.salesChannel.name",dataIndex:"order.salesChannel.name",label:"novalnet-subscription.list.saleschannelName",allowResize:!0},{property:"order.orderCustomer.firstName",dataIndex:"order.orderCustomer.firstName,order.orderCustomer.lastName",label:"novalnet-subscription.list.customerName",allowResize:!0},{property:"amount",label:"novalnet-subscription.list.amount",allowResize:!0,align:"right"},{property:"status",dataIndex:"status",label:"novalnet-subscription.list.status",allowResize:!0,align:"center"},{property:"interval",dataIndex:"interval",label:"novalnet-subscription.list.intervalType",allowResize:!0},{property:"length",dataIndex:"length",label:"novalnet-subscription.list.subscriptionLength",allowResize:!0},{property:"countItems",dataIndex:"order.lineItems",label:"novalnet-subscription.list.countItems",allowResize:!0,visible:!1},{property:"createdAt",label:"novalnet-subscription.list.createdAt",allowResize:!0},{property:"endingAt",label:"novalnet-subscription.detail.endingDate",allowResize:!0}]},getVariantFromOrderState:function(t){return"CANCELLED"==t||"EXPIRED"==t||"FAILED"==t?"danger":"PENDING"==t||"ON_HOLD"==t?"info":"SUSPENDED"==t||"PENDING_CANCEL"==t?"warning":"success"},updateTotal:function(t){var e=t.total;this.total=e},onConfirmDelete:function(t){var e=this;return this.showDeleteModal=!1,this.subscriptionRepository.delete(t).then((function(){e.getList()}))},onChangeStatusFilter:function(t){this.page=1,this.statusFilter=t,this.getList()}}});var L=Shopware,F=L.Component,M=L.Mixin;L.Filter,L.Context,Shopware.Data.Criteria;F.register("novalnet-subs-renewal-modal",{template:'<sw-modal :title="$tc(\'novalnet-subscription.detail.renewalTitle\')"\n          @modal-close="closeModal">\n\n    <p>{{ $tc(\'novalnet-subscription.detail.actionConfirm\') }}</p>\n\t\n\t{% block novalnet_subscription_cancel_modal_content %}\n\t\t<template #default>\n\n\t\t\t{% block novalnet_payment_order_refund_modal_content_info_text %}\n\t\t\t\t<sw-container columns="1fr"\n\t\t\t\t\t\t\tgap="0px 30px">\n\t\t\t\t\t<sw-text-field \n\t\t\t\t\t\tv-model="subscriptionInterval"\n\t\t\t\t\t\t:disabled="true"\n\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.renewalIntervalHelpText\')"\n\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.intervalLabel\')"\n\t\t\t\t\t\trequired="required">\n\t\t\t\t\t</sw-text-field>\n\t\t\t\t\t<sw-select-field\n\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.settingForm.productSettings.renewalDurationHelpText\')"\n\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.settingForm.productSettings.durationLabel\')"\n\t\t\t\t\t\t:options="subsOptions"\n\t\t\t\t\t\tv-model="subscriptionLength"\n\t\t\t\t\t\t@change="changeField">\n\t\t\t\t\t</sw-select-field>\n\t\t\t\t</sw-container>\n\t\t\t{% endblock %}\n\t\t</template>\n\t{% endblock %}\n\t\t\t\n    <template #modal-footer>\n        <sw-button @click="closeModal">\n            {{ $tc(\'novalnet-subscription.detail.abortButton\') }}\n        </sw-button>\n\n        <sw-button variant="primary" :disabled="disabled"\n                   @click="confirm">\n            {{ $tc(\'novalnet-subscription.detail.renewalButton\') }}\n        </sw-button>\n    </template>\n\n    <sw-loader v-if="isLoading"></sw-loader>\n</sw-modal>\n',props:{actionToConfirm:{type:String,required:!0},aboId:{type:String,required:!0},unit:{type:String,required:!1},interval:{type:String,required:!1}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[M.getByName("notification"),M.getByName("sw-inline-snippet")],data:function(){return{isLoading:!0,cancelReason:"",disabled:!1,subsOptions:[],subscriptionLength:0,subscriptionInterval:0}},created:function(){this.createdComponent(),this.isLoading=!1},methods:{createdComponent:function(){if(this.subscriptionInterval=this.interval,this.subsOptions=[],"m"==this.unit)var t=24,e="months";else if("w"==this.unit)t=54,e="weeks";else if("y"==this.unit)t=12,e="years";else t=90,e="days";for(var n=0;n<=t;n++)0==n?this.subsOptions.push({id:n,name:this.$tc("novalnet-subscription.settingForm.productSettings.neverExpires")}):1==n&&n%this.interval==0?this.subsOptions.push({id:n,name:n+" "+this.$tc("novalnet-subscription.settingForm.productSettings."+e+"SingleLabel")}):n%this.interval==0&&this.subsOptions.push({id:n,name:n+" "+this.$tc("novalnet-subscription.settingForm.productSettings."+e+"Label")})},closeModal:function(){this.$emit("modal-close")},confirm:function(){var t=this;this.isLoading=!0,this.disabled=!0;var e=this.subscriptionLength;"renewalAbo"==this.actionToConfirm&&(0!=e&&(e/=this.subscriptionInterval),this.NovalPaymentSubsService.renewalSubscription(this.aboId,e).then((function(e){t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.renewalMessage")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})})))},changeField:function(t){this.subscriptionLength=parseInt(t,10),this.$emit("field-changed",parseInt(t,10))}}});var V=Shopware,R=V.Component,B=V.Mixin,j=Shopware.Data.Criteria;R.register("novalnet-subs-product-change-modal",{template:'<sw-modal :title="$tc(\'novalnet-subscription.detail.editProductTitle\')"\n          @modal-close="closeModal">\n\n    {% block novalnet_sub_next_cycle_date_change_content %}\n\t\t<template #default>\n\t\n\t\t\t{% block novalnet_subscription_product_change %}\n\t\t\t\t<sw-container columns="1fr"\n\t\t\t\t\t\t\tgap="0px 30px">\n\t\t\t\t\t\n\t\t\t\t\t<sw-single-select\n\t\t\t\t\t\tv-if="showProductChange"\n\t\t\t\t\t\tv-model="subscriptionProduct"\n\t\t\t\t\t\tlabelProperty="translated.name"\n\t\t\t\t\t\tvalueProperty="id"\n\t\t\t\t\t\t:value="subscriptionProduct"\n\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.detail.productTitle\')"\n\t\t\t\t\t\t:options="products"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tshow-clearable-button\n\t\t\t\t\t\trequired\n\t\t\t\t\t\t@change="onProductChange"\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<sw-number-field \n\t\t\t\t\t\tnumberType="int" \n\t\t\t\t\t\t:step="null" \n\t\t\t\t\t\t:min="0" \n\t\t\t\t\t\t:max="100" \n\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\tv-model="quantity"\n\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.detail.productQuantity\')"\n\t\t\t\t\t\t/>\n\t\t\t\t</sw-container>\n\t\t\t{% endblock %}\n\t\t</template>\n\t{% endblock %}\n\t\t\t\n    <template #modal-footer>\n        <sw-button @click="closeModal">\n            {{ $tc(\'novalnet-subscription.detail.abortButton\') }}\n        </sw-button>\n        \n        <sw-button v-if="showProductChange" variant="primary" :disabled="disabled"\n                   @click="updateProduct">\n            {{ $tc(\'novalnet-subscription.detail.confirmButton\') }}\n        </sw-button>\n        \n        <sw-button v-else variant="primary" :disabled="disabled"\n                   @click="updateProductQuantity">\n            {{ $tc(\'novalnet-subscription.detail.confirmButton\') }}\n        </sw-button>\n        \n    </template>\n\n    <sw-loader v-if="isLoading"></sw-loader>\n</sw-modal>\n',props:{abo:{type:Object,required:!0},products:{type:Object,required:!0}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[B.getByName("notification"),B.getByName("sw-inline-snippet")],data:function(){return{isLoading:!0,cancelReason:"",disabled:!1,showProductChange:!0,quantity:1,subscriptionProduct:null}},computed:{productRepository:function(){return this.repositoryFactory.create("product")},productCriteria:function(){var t=new j(1,200);return t.addAssociation("visibilities.salesChannel"),t.addAssociation("configuratorSettings.option"),t.addAssociation("options"),t.addAssociation("options.group"),t.addAssociation("novalnetConfiguration"),t}},created:function(){this.isLoading=!1,this.createdComponent()},methods:{createdComponent:function(){var t=this;this.abo.quantity?this.quantity=this.abo.quantity:this.abo.order.lineItems.forEach((function(e){"product"==e.type&&e.id==t.abo.lineItemId&&(t.quantity=e.quantity)})),this.abo.productId?this.subscriptionProduct=this.abo.productId:this.abo.order.lineItems.forEach((function(e){"product"==e.type&&e.id==t.abo.lineItemId&&(t.subscriptionProduct=e.productId)}))},onProductChange:function(t){this.subscriptionProduct=t},closeModal:function(){this.$emit("modal-close")},updateProduct:function(){var t,e=this;if(0==this.quantity)return this.$emit("modal-close"),void this.createNotificationError({message:this.$tc("novalnet-subscription.order.productErrorMessage"),autoClose:!1});this.abo.productId?t=this.abo.productId:this.abo.order.lineItems.forEach((function(n){"product"==n.type&&n.id==e.abo.lineItemId&&(t=n.productId)})),null==this.subscriptionProduct||this.subscriptionProduct==t&&this.abo.quantity==this.quantity?this.$emit("modal-close"):(this.isLoading=!0,this.disabled=!0,this.subscriptionProduct==t&&this.abo.quantity!=this.quantity?this.NovalPaymentSubsService.updateProductQuantity(this.abo.id,this.quantity).then((function(t){1==t.success?(e.createNotificationSuccess({message:e.$tc("novalnet-subscription.order.productUpdateMessage")}),e.$emit("modal-close"),setTimeout(e.$router.go,3e3)):(e.$emit("modal-close"),e.createNotificationError({message:t.errorMessage,autoClose:!1}))})).catch((function(t){e.$emit("modal-close"),e.isLoading=!1,e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})})):this.NovalPaymentSubsService.updateProduct(this.abo.id,this.subscriptionProduct,this.quantity).then((function(t){1==t.success?(e.createNotificationSuccess({message:e.$tc("novalnet-subscription.order.productUpdateMessage")}),e.$emit("modal-close"),setTimeout(e.$router.go,3e3)):(e.$emit("modal-close"),e.createNotificationError({message:t.errorMessage,autoClose:!1}))})).catch((function(t){e.$emit("modal-close"),e.isLoading=!1,e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})})))},updateProductQuantity:function(){var t=this;if(0==this.quantity)return this.$emit("modal-close"),void this.createNotificationError({message:this.$tc("novalnet-subscription.order.productErrorMessage"),autoClose:!1});this.abo.quantity!=this.quantity?(this.isLoading=!0,this.disabled=!0,this.NovalPaymentSubsService.updateProductQuantity(this.abo.id,this.quantity).then((function(e){1==e.success?(t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.productUpdateMessage")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)):(t.$emit("modal-close"),t.createNotificationError({message:e.errorMessage,autoClose:!1}))})).catch((function(e){t.$emit("modal-close"),t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})}))):this.$emit("modal-close")}}});var H=Shopware,q=H.Component,z=H.Mixin;Shopware.Data.Criteria;function U(t){return(U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function W(){W=function(){return t};var t={},e=Object.prototype,n=e.hasOwnProperty,i=Object.defineProperty||function(t,e,n){t[e]=n.value},o="function"==typeof Symbol?Symbol:{},r=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",a=o.toStringTag||"@@toStringTag";function l(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,n){return t[e]=n}}function c(t,e,n,o){var r=e&&e.prototype instanceof p?e:p,s=Object.create(r.prototype),a=new P(o||[]);return i(s,"_invoke",{value:S(t,n,a)}),s}function u(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=c;var d={};function p(){}function m(){}function b(){}var h={};l(h,r,(function(){return this}));var v=Object.getPrototypeOf,g=v&&v(v(D([])));g&&g!==e&&n.call(g,r)&&(h=g);var f=b.prototype=p.prototype=Object.create(h);function y(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function w(t,e){function o(i,r,s,a){var l=u(t[i],t,r);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==U(d)&&n.call(d,"__await")?e.resolve(d.__await).then((function(t){o("next",t,s,a)}),(function(t){o("throw",t,s,a)})):e.resolve(d).then((function(t){c.value=t,s(c)}),(function(t){return o("throw",t,s,a)}))}a(l.arg)}var r;i(this,"_invoke",{value:function(t,n){function i(){return new e((function(e,i){o(t,n,e,i)}))}return r=r?r.then(i,i):i()}})}function S(t,e,n){var i="suspendedStart";return function(o,r){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===o)throw r;return T()}for(n.method=o,n.arg=r;;){var s=n.delegate;if(s){var a=x(s,n);if(a){if(a===d)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===i)throw i="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i="executing";var l=u(t,e,n);if("normal"===l.type){if(i=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(i="completed",n.method="throw",n.arg=l.arg)}}}function x(t,e){var n=e.method,i=t.iterator[n];if(void 0===i)return e.delegate=null,"throw"===n&&t.iterator.return&&(e.method="return",e.arg=void 0,x(t,e),"throw"===e.method)||"return"!==n&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var o=u(i,t.iterator,e.arg);if("throw"===o.type)return e.method="throw",e.arg=o.arg,e.delegate=null,d;var r=o.arg;return r?r.done?(e[t.resultName]=r.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):r:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function C(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function _(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(C,this),this.reset(!0)}function D(t){if(t){var e=t[r];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,o=function e(){for(;++i<t.length;)if(n.call(t,i))return e.value=t[i],e.done=!1,e;return e.value=void 0,e.done=!0,e};return o.next=o}}return{next:T}}function T(){return{value:void 0,done:!0}}return m.prototype=b,i(f,"constructor",{value:b,configurable:!0}),i(b,"constructor",{value:m,configurable:!0}),m.displayName=l(b,a,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===m||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,l(t,a,"GeneratorFunction")),t.prototype=Object.create(f),t},t.awrap=function(t){return{__await:t}},y(w.prototype),l(w.prototype,s,(function(){return this})),t.AsyncIterator=w,t.async=function(e,n,i,o,r){void 0===r&&(r=Promise);var s=new w(c(e,n,i,o),r);return t.isGeneratorFunction(n)?s:s.next().then((function(t){return t.done?t.value:s.next()}))},y(f),l(f,a,"Generator"),l(f,r,(function(){return this})),l(f,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),n=[];for(var i in e)n.push(i);return n.reverse(),function t(){for(;n.length;){var i=n.pop();if(i in e)return t.value=i,t.done=!1,t}return t.done=!0,t}},t.values=D,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function i(n,i){return s.type="throw",s.arg=t,e.next=n,i&&(e.method="next",e.arg=void 0),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var r=this.tryEntries[o],s=r.completion;if("root"===r.tryLoc)return i("end");if(r.tryLoc<=this.prev){var a=n.call(r,"catchLoc"),l=n.call(r,"finallyLoc");if(a&&l){if(this.prev<r.catchLoc)return i(r.catchLoc,!0);if(this.prev<r.finallyLoc)return i(r.finallyLoc)}else if(a){if(this.prev<r.catchLoc)return i(r.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return i(r.finallyLoc)}}}},abrupt:function(t,e){for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var r=o;break}}r&&("break"===t||"continue"===t)&&r.tryLoc<=e&&e<=r.finallyLoc&&(r=null);var s=r?r.completion:{};return s.type=t,s.arg=e,r?(this.method="next",this.next=r.finallyLoc,d):this.complete(s)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),_(n),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var i=n.completion;if("throw"===i.type){var o=i.arg;_(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:D(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},t}function G(t,e,n,i,o,r,s){try{var a=t[r](s),l=a.value}catch(t){return void n(t)}a.done?e(l):Promise.resolve(l).then(i,o)}q.register("novalnet-subs-manual-execution-modal",{template:'<sw-modal :title="$tc(\'novalnet-subscription.detail.manualExecutionTitle\')"\n          @modal-close="closeModal">\n\n    <p>{{ $tc(\'novalnet-subscription.detail.manualRecurringConfirm\') }}</p>\n\t\t\t\n    <template #modal-footer>\n        <sw-button @click="closeModal">\n            {{ $tc(\'novalnet-subscription.detail.abortButton\') }}\n        </sw-button>\n\n        <sw-button variant="primary" :disabled="disabled"\n                   @click="confirm">\n            {{ $tc(\'novalnet-subscription.detail.manualButton\') }}\n        </sw-button>\n    </template>\n\n    <sw-loader v-if="isLoading"></sw-loader>\n</sw-modal>\n',props:{actionToConfirm:{type:String,required:!0},aboId:{type:String,required:!0}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[z.getByName("notification"),z.getByName("sw-inline-snippet")],data:function(){return{isLoading:!0,cancelReason:"",disabled:!1,subsOptions:[],subscriptionLength:0,subscriptionInterval:0}},created:function(){this.isLoading=!1},methods:{closeModal:function(){this.$emit("modal-close")},confirm:function(){var t=this;this.isLoading=!0,this.disabled=!0,"manualExecutionAbo"==this.actionToConfirm&&this.NovalPaymentSubsService.manualExecutionSubscription(this.aboId).then((function(e){1==e.success?(t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.manualOrderMessage")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)):(t.$emit("modal-close"),t.createNotificationError({message:e.errorMessage,autoClose:!1}),setTimeout(t.$router.go,3e3))})).catch((function(e){t.$emit("modal-close"),t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1}),setTimeout(t.$router.go,3e3)}))}}});var Z=Shopware,Y=Z.Component,K=Z.Mixin,Q=(Z.Filter,Z.Context,Shopware.Data.Criteria);Y.register("novalnet-subsctiption-overview-detail",{template:'{% block novalnet_subsctiption_details %}\n\t<sw-page class="novalnet-subsctiption" v-if="abo">\n\t\t{% block novalnet_subsctiption_settings_actions %}\n            <template slot="smart-bar-actions">\n\t\t\t\t<template v-if="acl.can(\'novalnet_subscription.editor\')">\n\t\t\t\t</template>\n\t\t\t\t<sw-button :disabled="isLoading || !acl.can(\'novalnet_subscription.editor\')" @click="onRenewalAbo" variant="primary" v-if="abo.status == \'EXPIRED\'">\n\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.renewalButton\') }}\n\t\t\t\t</sw-button>\n\t\t\t\t<sw-button :disabled="isLoading || !acl.can(\'novalnet_subscription.editor\')" @click="onProductModal" variant="primary" v-if="abo.status == \'ACTIVE\'">\n\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.editProductButton\') }}\n\t\t\t\t</sw-button>\n\t\t\t\t<sw-button class="novalnet_subscription_manual_execution" :title="$tc(\'novalnet-subscription.detail.manualExecution\')" :disabled="isLoading || !acl.can(\'novalnet_subscription.creator\')" @click="onManualExecutionAbo" variant="primary" v-if="abo.status == \'ACTIVE\'">\n\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.manualRunButton\') }}\n\t\t\t\t</sw-button>\n\t\t\t</template>\n        {% endblock %}\n        \n        {% block novalnet_subsctiption_details_content %}\n\t\t\t<template #content>\n\t\t\t\t<sw-card-view>\n\t\t\t\t\t<sw-tabs class="sw-order-detail__tabs" position-identifier="novalnet-subsctiption-overview-detail">\n\t\t\t\t\t\t{% block novalnet_subsctiption_detail_content_tabs_general %}\n\t\t\t\t\t\t\t<sw-tabs-item :route="{ name: \'novalnet.subsctiption.detail.base\', params: { id: $route.params.id } }">\n\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.overviewTab\') }}\n\t\t\t\t\t\t\t</sw-tabs-item>\n\t\t\t\t\t\t\t<sw-tabs-item :route="{ name: \'novalnet.subsctiption.detail.transactions\', params: { id: $route.params.id } }">\n\t\t\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.transactionsTab\') }}\n\t\t\t\t\t\t\t</sw-tabs-item>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</sw-tabs>\n\n\t\t\t\t\t{% block novalnet_subsctiption_detail_content_view %}\n\t\t\t\t\t\t<router-view\n\t\t\t\t\t\t\t:aboId="aboId"\n\t\t\t\t\t\t\tref="baseComponent">\n\t\t\t\t\t\t</router-view>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</sw-card-view>\n\t\t\t\t<novalnet-subs-renewal-modal v-if="actionToConfirm !== \'\' && actionToConfirm == \'renewalAbo\'"\n                                :actionToConfirm="actionToConfirm"\n                                :aboId="aboId"\n                                :unit="unit"\n                                :interval="interval"\n                                @modal-close="closeModal">\n\t\t\t\t</novalnet-subs-renewal-modal>\n\t\t\t\t<novalnet-subs-manual-execution-modal v-if="actionToConfirm !== \'\' && actionToConfirm == \'manualExecutionAbo\'"\n                                :actionToConfirm="actionToConfirm"\n                                :aboId="aboId"\n                                @modal-close="closeModal">\n\t\t\t\t</novalnet-subs-manual-execution-modal>\n\t\t\t\t<novalnet-subs-product-change-modal v-if="showProductChangeModal"\n                                :abo="abo"\n\t\t\t\t\t\t\t\t:products="products"\n                                @modal-close="closeProductChangeModal">\n\t\t\t\t</novalnet-subs-product-change-modal>\n\t\t\t</template>\n        {% endblock %}\n    </sw-page>\n    \n{% endblock %}\n',mixins:[K.getByName("notification"),K.getByName("sw-inline-snippet")],inject:["repositoryFactory","acl"],data:function(){return{identifier:"",aboId:null,unit:null,interval:null,abo:null,products:[],isEditing:!1,isLoading:!0,actionToConfirm:"",isSaveSuccessful:!1,showProductChangeModal:!1}},metaInfo:function(){return{title:this.$createTitle()}},computed:{productRepository:function(){return this.repositoryFactory.create("product")},productCriteria:function(){var t=new Q(1,200);return t.addAssociation("visibilities.salesChannel"),t.addAssociation("configuratorSettings.option"),t.addAssociation("options"),t.addAssociation("options.group"),t.addAssociation("novalnetConfiguration"),t}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var t=this;this.aboId=this.$route.params.id,this.loadNovalnetSubscription().finally((function(){t.isLoading=!1})),this.getSubscriptionProduct()},getSubscriptionProduct:function(){var t,e=this;return(t=W().mark((function t(){var n;return W().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:(n=new Q(1,200)).addAssociation("visibilities.salesChannel"),n.addAssociation("configuratorSettings.option"),n.addAssociation("options"),n.addAssociation("options.group"),n.addAssociation("novalnetConfiguration"),e.productRepository.search(n).then((function(t){t.forEach((function(t){t.parentId?e.productRepository.get(t.parentId,Shopware.Context.api,e.productCriteria).then((function(n){if((1==t.active||1==n.active)&&(null!=t.extensions&&null!=t.extensions.novalnetConfiguration&&1==t.extensions.novalnetConfiguration.active||null!=n&&null!=n.extensions&&null!=n.extensions.novalnetConfiguration&&1==n.extensions.novalnetConfiguration.active)){var i="",o=!1;null==t.name&&null==t.translated.name?i+=n.translated.name?n.translated.name:n.group.name:i+=t.translated.name?t.translated.name:t.group.name,null!=t.options&&(i+=" ( ",t.options.sort((function(t,e){return t.createdAt-e.createdAt})).forEach((function(t){null!=t.group&&(o=!0,i+=(t.group.name?t.group.name:t.group.translated.name)+": "+(t.name?t.name:t.translated.name)+" | ")})),i=i.slice(0,-3),o&&(i+=" )")),null!=t.extensions&&null!=t.extensions.novalnetConfiguration&&null!=t.extensions.novalnetConfiguration.displayName&&""!=t.extensions.novalnetConfiguration.displayName.trim()?t.name=t.translated.name=t.extensions.novalnetConfiguration.displayName:t.name=t.translated.name=i,e.products.push(t)}})):1==t.active&&null!=t.extensions&&null!=t.extensions.novalnetConfiguration&&1==t.extensions.novalnetConfiguration.active&&0==t.childCount&&(null!=t.extensions&&null!=t.extensions.novalnetConfiguration&&null!=t.extensions.novalnetConfiguration.displayName&&""!=t.extensions.novalnetConfiguration.displayName.trim()&&(t.name=t.translated.name=t.extensions.novalnetConfiguration.displayName),e.products.push(t))}))}));case 7:case"end":return t.stop()}}),t)})),function(){var e=this,n=arguments;return new Promise((function(i,o){var r=t.apply(e,n);function s(t){G(r,i,o,s,a,"next",t)}function a(t){G(r,i,o,s,a,"throw",t)}s(void 0)}))})()},onRenewalAbo:function(){this.actionToConfirm="renewalAbo"},onManualExecutionAbo:function(){this.actionToConfirm="manualExecutionAbo"},novalnetRepository:function(){return this.repositoryFactory.create("novalnet_subscription")},loadNovalnetSubscription:function(){var t=this,e=new Q;return e.addAssociation("subsOrders"),e.addAssociation("order"),e.addAssociation("order.salesChannel"),e.addAssociation("order.lineItems"),e.addAssociation("order.currency"),e.addAssociation("order.orderCustomer"),this.novalnetRepository().get(this.aboId,Shopware.Context.api,e).then((function(e){t.abo=e,t.unit=e.unit,t.interval=e.interval}))},confirmAction:function(t){this.actionToConfirm=""},closeModal:function(){this.actionToConfirm=""},onProductModal:function(){this.showProductChangeModal=!0},closeProductChangeModal:function(){this.showProductChangeModal=!1}}});n("Tg5Z");var J=Shopware,X=J.Component,tt=J.Mixin;Shopware.Data.Criteria;X.register("novalnet-subs-confirm-modal",{template:'<sw-modal :title="confirmButtonText"\n          @modal-close="closeModal">\n\n    <p>{{ $tc(\'novalnet-subscription.detail.actionConfirm\') }}</p>\n\t\n\t{% block novalnet_subscription_cancel_modal_content %}\n\t\t<template #default v-if="actionToConfirm !== \'activeAbo\'">\n\n\t\t\t{% block novalnet_payment_order_refund_modal_content_info_text %}\n\t\t\t\t<sw-container columns="1fr"\n\t\t\t\t\t\t\tgap="0px 30px">\n\t\t\t\t\t\n\t\t\t\t\t<sw-text-field v-model="cancelReason"\n\t\t\t\t\t\t\t\t:allowEmpty="false"\n\t\t\t\t\t\t\t\t:label="cancelReaonLabel"\n\t\t\t\t\t\t\t\trequired="required">\n\t\t\t\t\t</sw-text-field>\n\t\t\t\t</sw-container>\n\t\t\t{% endblock %}\n\t\t</template>\n\t{% endblock %}\n\t\t\t\n    <template #modal-footer>\n        <sw-button @click="closeModal">\n            {{ $tc(\'novalnet-subscription.detail.abortButton\') }}\n        </sw-button>\n\n        <sw-button v-if="actionToConfirm == \'activeAbo\'" variant="primary" :disabled="disabled"\n                   @click="confirm">\n            {{ confirmButtonText }}\n        </sw-button>\n        <sw-button v-else variant="danger" :disabled="disabled"\n                   @click="confirm">\n            {{ confirmButtonText }}\n        </sw-button>\n    </template>\n\n    <sw-loader v-if="isLoading"></sw-loader>\n</sw-modal>\n',props:{actionToConfirm:{type:String,required:!0},customerId:{type:String,required:!0},aboId:{type:String,required:!0},salesChannelId:{type:String,required:!0},confirmButtonText:{type:String,default:function(){return this.$tc("novalnet-subscription.detail.confirmButton")}},cancelReaonLabel:{type:String,default:function(){return $tc("novalnet-subscription.list.cancelReaon")}}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[tt.getByName("notification"),tt.getByName("sw-inline-snippet")],data:function(){return{isLoading:!0,cancelReason:"",disabled:!1}},created:function(){this.isLoading=!1},methods:{closeModal:function(){this.$emit("modal-close")},confirm:function(){var t=this;this.isLoading=!0,this.disabled=!0,"activeAbo"==this.actionToConfirm?this.NovalPaymentSubsService.active(this.aboId).then((function(e){t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.activeMessage")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})})):"cancelAbo"==this.actionToConfirm?this.NovalPaymentSubsService.cancel(this.aboId,this.cancelReason,this.customerId).then((function(e){t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.cancelledMessage")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})})):"pendingAbo"==this.actionToConfirm?this.NovalPaymentSubsService.pauseSubscription(this.aboId,this.cancelReason,this.customerId).then((function(e){t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.pendingMessage")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})})):"pauseAbo"==this.actionToConfirm&&this.NovalPaymentSubsService.pauseSubscription(this.aboId,this.cancelReason,this.customerId).then((function(e){t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.suspendedMessage")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)})).catch((function(e){t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})}))}}});var et=Shopware,nt=et.Component,it=et.Mixin;Shopware.Data.Criteria;nt.register("novalnet-sub-next-cycle-date-change",{template:'{% block novalnet_sub_next_cycle_date_change %}\n\n<sw-modal :title="$tc(\'novalnet-subscription.detail.cycleDate\')"\n          @modal-close="closeModal">\n\n\n\t\t\t{% block novalnet_sub_next_cycle_date_change_content %}\n\t\t\t\t<template #default>\n\n\t\t\t\t\t{% block novalnet_payment_order_refund_modal_content_info_text %}\n\t\t\t\t\t\t<sw-container columns="1fr"\n\t\t\t\t\t\t\t\t\tgap="0px 30px">\n\t\t\t\t\t\t\t<sw-datepicker \n\t\t\t\t\t\t\t\t\t\tv-model="abo.nextDate"\n\t\t\t\t\t\t\t\t\t\tdate-type="datetime-local"\n\t\t\t\t\t\t\t\t\t\tminDate = "abo.nextDate" \n\t\t\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.detail.nextDate\')"\n\t\t\t\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.detail.dateDescription\')"/>\n\t\t\t\t\t\t\t<sw-text-field \n\t\t\t\t\t\t\t\t\tv-model="reason"\n\t\t\t\t\t\t\t\t\t:label="$tc(\'novalnet-subscription.detail.reasonTitle\')"\n\t\t\t\t\t\t\t\t\t:helpText="$tc(\'novalnet-subscription.detail.reasonDescription\')">\n\t\t\t\t\t\t\t</sw-text-field>\n\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t{% endblock %}\n\n\t\t\t{% block novalnet_sub_next_cycle_date_change_actions %}\n\t\t\t   <template #modal-footer>\n\t\t\t\t\t<sw-button @click="closeModal">\n\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.cancelLabel\') }}\n\t\t\t\t\t</sw-button>\n\n\t\t\t\t\t<sw-button variant="primary" :disabled="disabled" :square="false" :block="false" :isLoading="false" @click="changeDate" >\n\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.confirmButton\') }}\n\t\t\t\t\t</sw-button>\n\t\t\t\t</template>\n\t\t\t\n\t\t\t{% endblock %}\n\n    <sw-loader v-if="isLoading"></sw-loader>\n</sw-modal>\n\n{% endblock %}\n',props:{abo:{type:Object,required:!0},customerId:{type:String,required:!0},aboId:{type:String,required:!0},salesChannelId:{type:String,required:!0}},inject:["repositoryFactory","NovalPaymentSubsService","acl"],mixins:[it.getByName("notification"),it.getByName("sw-inline-snippet")],data:function(){return{reason:"",disabled:!1}},created:function(){this.isLoading=!1},methods:{closeModal:function(){this.$emit("modal-close")},changeDate:function(){var t=this,e=this.abo.nextDate,n=this.reason,i=this.aboId;this.isLoading=!0,this.disabled=!0,this.NovalPaymentSubsService.dateChange(i,e,n,this.abo.subsOrders).then((function(e){1==e.success?(t.createNotificationSuccess({message:t.$tc("novalnet-subscription.order.cycleDateChange")}),t.$emit("modal-close"),setTimeout(t.$router.go,3e3)):(t.$emit("modal-close"),t.createNotificationError({message:e.errorMessage,autoClose:!1}))})).catch((function(e){t.$emit("modal-close"),t.isLoading=!1,t.createNotificationError({message:"".concat(e.title,": ").concat(e.message),autoClose:!1})}))}}});var ot=Shopware,rt=ot.Component,st=ot.Mixin,at=(ot.Filter,ot.Context,Shopware.Data.Criteria),lt=Shopware.Utils.format.currency;rt.register("novalnet-subsctiption-overview-detail-base",{template:'<sw-card-view v-if="!isLoading">\n\n    <sw-card v-if="abo.status == \'PENDING\'">\n        <sw-icon name="regular-exclamation-triangle" color="#ff0000"></sw-icon>\n        {{ $tc(\'novalnet-subscription.detail.pendingNotice\') }}\n    </sw-card>\n    \n    <sw-card v-if="subsCycle">\n        <sw-icon name="regular-exclamation-triangle" color="#ff0000"></sw-icon>\n        <span v-html="$tc(\'novalnet-subscription.detail.retryNotice\', 0, { reason: subOrderStatus })"></span>\n    </sw-card>\n    \n    <sw-card v-if="onHold">\n        <sw-icon name="regular-exclamation-triangle" color="#ff0000"></sw-icon>\n        <span v-html="$tc(\'novalnet-subscription.detail.onholdNotice\')"></span>\n    </sw-card>\n\n    <sw-card :title="$tc(\'novalnet-subscription.detail.cardTitle\')" :isLoading="isLoading">\n        <sw-container columns="1fr 1fr">\n            <div class="novalnet-subscription-header">\n                {# Logo #}\n                {% block novalnet_subscription_order_header_info %}\n                    <div class="novalnet-subscription-header-logo" style="text-align: center !important;">\n                        <img class="novalnet-subscription-icon" alt="Novalnet"\n                             :src="\'novalnetsubscription/static/img/plugin.png\' | asset">\n                    </div>\n                {% endblock %}\n                {# Full name and E-Mail address #}\n                {% block novalnet_subscription_order_customer_info %}\n                    <div class="novalnet-subscription-buyer-info">\n\n                        {% block novalnet_subscription_order_number %}\n                            <div class="novalnet-subscription-order-number">\n                                {{ $tc(\'novalnet-subscription.detail.subscriptionNo\') }} : {{ abo.subsNumber }}\n                            </div>\n                        {% endblock %}\n\n                        {% block novalnet_subscription_order_customer_info_email %}\n                            <div class="novalnet-subscription-state-select">\n                                <sw-select-field \n                                        class="novalnet-subscription-select-status"\n                                        :disabled="!acl.can(\'novalnet_subscription.editor\')"\n                                        placeholder="placeholder goes here..." \n                                        :options="transitionOptions"\n                                        size="small"\n                                        v-model="selectedActionName"\n                                        @change="onStateChangeClicked">\n                                </sw-select-field>\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </div>\n\n            <sw-container class="novalnet-subscription-amount-info" rows="4" columns="1fr">\n                {% block novalnet_subscription_order_amount %}\n                    <div class="novalnet-subscription-total-amount" style="text-align: right !important;">\n                        {{ abo.amount|currency(abo.order.currency.isoCode) }}\n                    </div>\n                {% endblock %}\n                {% block novalnet_subscription_order_date %}\n                    <div class="novalnet-subscription-created-date" style="text-align: right !important;">\n                        {{ abo.createdAt|date }}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        </sw-container>\n        \n        <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="30px 30px" class="novalnet-subscription-overview-details">\n\n            {% block novalnet_subscription_detail_overview_left_column %}\n                <sw-description-list columns="1fr" grid="1fr" class="sw-order-user-card__summary-vertical">\n                    {% block novalnet_subscription_detail_overview_interval %}\n\t\t\t\t\t\t\t<dl><dt>{{ $tc(\'novalnet-subscription.detail.deliveryIntervalLabel\') }}</dt>\n\t\t\t\t\t\t\t<dd>{{ abo.interval }} {{ $tc(\'novalnet-subscription.intervals.\' + abo.unit.toLowerCase()) }}</dd>\n\t\t\t\t\t\t\t<dl><dt>{{ $tc(\'novalnet-subscription.detail.durationLabel\') }}</dt>\n\t\t\t\t\t\t\t<dd v-if="abo.length">{{ abo.interval * abo.length }} {{ $tc(\'novalnet-subscription.intervals.\' + abo.unit.toLowerCase()) }}</dd>\n\t\t\t\t\t\t\t<dd v-else>{{ $tc(\'novalnet-subscription.intervals.endlessSubscription\') }}</dd>\n\t\t\t\t\t\t\t<dl><dt>{{ $tc(\'novalnet-subscription.detail.freeTrialLabel\') }}</dt>\n\t\t\t\t\t\t\t<dd v-if="abo.trialInterval">{{ abo.trialInterval }} {{ $tc(\'novalnet-subscription.intervals.\' + abo.trialUnit.toLowerCase()) }}</dd>\n\t\t\t\t\t\t\t<dd v-else>NIL</dd>\n\t\t\t\t\t\t\t<dl><dt v-if="abo.status == \'CANCELLED\'">{{ $tc(\'novalnet-subscription.detail.cancelledAt\') }}</dt>\n\t\t\t\t\t\t\t<dd v-if="abo.status == \'CANCELLED\'">{{ abo.cancelledAt | date }}</dd>\n\t\t\t\t\t\t\t<dt v-if="abo.status == \'SUSPENDED\'">{{ $tc(\'novalnet-subscription.detail.suspendedAt\') }}</dt>\n\t\t\t\t\t\t\t<dd v-if="abo.status == \'SUSPENDED\'">{{ abo.terminationDate | date }}</dd>\n\t\t\t\t\t\t\t<dt>{{ $tc(\'novalnet-subscription.detail.currentPaymentLabel\') }}</dt>\n\t\t\t\t\t\t\t<dd>{{ paymentName }}</dd>\n\t\t\t\t\t\t</dl>\n                    {% endblock %}\n                </sw-description-list>\n                <sw-description-list columns="1fr" grid="1fr" class="sw-order-user-card__summary-vertical">\n                    {% block novalnet_subscription_detail_overview_next_debt %}\n                        <dl>\n\t\t\t\t\t\t\t<dt>{{ $tc(\'novalnet-subscription.detail.nextDebt\') }}</dt>\n\t\t\t\t\t\t\t<dd>{{ abo.nextDate | date }} \n\t\t\t\t\t\t\t\t<sw-icon name="regular-pencil-s" v-if="showCycleDate && acl.can(\'novalnet_subscription.editor\')" @click="showChangeNextCyle" small></sw-icon> \n\t\t\t\t\t\t\t\t </dd>\n\t\t\t\t\t\t\t<dt>{{ $tc(\'novalnet-subscription.detail.endingDate\') }}</dt>\n\t\t\t\t\t\t\t<dd v-if="abo.length">{{ abo.endingAt | date }}</dd>\n\t\t\t\t\t\t\t<dd v-else>{{ $tc(\'novalnet-subscription.intervals.untilCanceled\') }} <span v-if=""> </span></dd>\n\t\t\t\t\t\t\t<dt>{{ $tc(\'novalnet-subscription.detail.lastExecutedLabel\') }}</dt>\n\t\t\t\t\t\t\t<dd>{{ abo.updatedAt | date }}</dd>\n\t\t\t\t\t\t\t<dt v-if="abo.status == \'CANCELLED\'">{{ $tc(\'novalnet-subscription.detail.cancelledReason\') }}</dt>\n\t\t\t\t\t\t\t<dd v-if="abo.status == \'CANCELLED\'">{{ abo.cancelReason ? abo.cancelReason : \'NIL\' }}</dd>\n\t\t\t\t\t\t\t<dt v-if="abo.status == \'SUSPENDED\'">{{ $tc(\'novalnet-subscription.detail.suspendedReason\') }}</dt>\n\t\t\t\t\t\t\t<dd v-if="abo.status == \'SUSPENDED\'">{{ abo.cancelReason ? abo.cancelReason : \'NIL\' }}</dd>\n\t\t\t\t\t\t</dl>\n                    {% endblock %}\n                </sw-description-list>\n            {% endblock %}\n        </sw-container>\n        \n    </sw-card>\n    \n    <sw-user-card :title="$tc(\'novalnet-subscription.detail.customerLabel\')" :user="abo.order.orderCustomer">\n        <template slot="actions">\n            <sw-button\n                :routerLink="{ name: \'sw.customer.detail\', params: { id: abo.order.orderCustomer.customerId } }">\n                <sw-icon name="regular-user" small></sw-icon>\n                {{ $tc(\'novalnet-subscription.detail.cardTitle\') }}\n            </sw-button>\n        </template>\n    </sw-user-card>\n    <sw-card :title="$tc(\'novalnet-subscription.detail.initialOrder\')">\n        <sw-container columns="1fr 1fr" gap="10px">\n            <sw-button :routerLink="{ name: \'sw.order.detail\', params: { id: abo.orderId } }">\n                {{ $tc(\'novalnet-subscription.detail.orderButton\', 0, { orderNumber: abo.order.orderNumber }) }}\n            </sw-button>\n        </sw-container>\n    </sw-card>\n    <sw-card v-if="!ProductExits" :title="$tc(\'novalnet-subscription.detail.productLabel\')">\n        <sw-order-line-items-grid :order="order"\n                                  :context="versionContext"\n                                  :editable="false">\n        </sw-order-line-items-grid>\n    </sw-card>\n    \n    <sw-card v-else :title="$tc(\'novalnet-subscription.detail.productLabel\')">\n        <sw-data-grid\n\t\t\t:data-source="productInfo"\n\t\t\t:columns="getColumns"\n\t\t\t:show-actions="false"\n\t\t\t:show-selection="false"\n\t\t\t>\n\t\t</sw-data-grid>\n    </sw-card>\n    \n    <novalnet-subs-confirm-modal v-if="actionToConfirm !== \'\'"\n                                :actionToConfirm="actionToConfirm"\n                                :refundableAmount="0"\n                                :confirmButtonText="confirmButtonText"\n                                :customerId="customerId"\n                                :salesChannelId="salesChannelId"\n                                :aboId="aboId"\n                                :cancelReaonLabel="cancelReaonLabel"\n                                @modal-close="closeModal">\n    </novalnet-subs-confirm-modal>\n    \n    <novalnet-sub-next-cycle-date-change \n\t\t\t\t\t\t\t\tv-if="changeCycleDate"\n                                :abo="abo"\n                                :customerId="customerId"\n                                :salesChannelId="salesChannelId"\n                                :aboId="aboId"\n                                @modal-close="closeModal">\n    </novalnet-sub-next-cycle-date-change>\n    \n    {% block novalnet_subsctiption_content_card_loading %}\n        <sw-loader v-if="isLoading"></sw-loader>\n    {% endblock %}\n\n\n</sw-card-view>\n',inject:["repositoryFactory","orderService","userService","NovalPaymentSubsService","acl"],mixins:[st.getByName("notification"),st.getByName("sw-inline-snippet")],props:{aboId:{type:String,required:!0}},data:function(){return{abo:null,subsCycle:!1,ProductExits:!1,subOrderStatus:"",paymentName:"",onHold:!1,order:null,versionContext:null,lineItems:[],productInfo:[],isLoading:!0,selectedActionName:"",salesChannelId:"",actionToConfirm:"",confirmButtonText:"",cancelReaonLabel:"",defaultStatus:["active","pending","pending_cancel","on_hold","expired","suspended","cancelled","failed"],transitionOptions:[],disabled:!1,customerId:"",changeCycleDate:!1,showCycleDate:!1}},created:function(){this.createdComponent()},computed:{productRepository:function(){return this.repositoryFactory.create("product")},productCriteria:function(){var t=new at;return t.addAssociation("options"),t.addAssociation("options.group"),t},aboRepository:function(){return this.repositoryFactory.create("novalnet_subscription")},getColumns:function(){return[{property:"quantity",dataIndex:"quantity",label:"sw-order.detailBase.columnQuantity",primary:!0,align:"right",width:"90px"},{property:"name",dataIndex:"name",label:"sw-order.detailBase.columnProductName",allowResize:!1,primary:!0,inlineEdit:!0,multiLine:!0},{property:"productNumber",dataIndex:"productNumber",label:"sw-order.detailBase.columnProductNumber",allowResize:!1,align:"left"},{property:"unitPrice",dataIndex:"unitPrice",label:"sw-order.detailBase.columnPriceGross",allowResize:!1,align:"right",inlineEdit:!0,width:"120px"},{property:"totalPrice",dataIndex:"totalPrice",label:"sw-order.detailBase.columnTotalPriceGross",allowResize:!1,align:"right",width:"120px"}]}},methods:{createdComponent:function(){var t=this;this.versionContext=Shopware.Context.api;var e=new at;e.addAssociation("subsOrders"),e.addAssociation("product"),e.addAssociation("product.options"),e.addAssociation("product.options.group"),e.addAssociation("payment_method"),e.addAssociation("order"),e.addAssociation("order.salesChannel"),e.addAssociation("order.lineItems"),e.addAssociation("order.currency"),e.addAssociation("order.orderCustomer"),this.aboRepository.get(this.aboId,Shopware.Context.api,e).then((function(e){t.abo=e;var n,i=e.product;if(i)if(t.ProductExits=!0,null==i.name&&null==i.translated.name&&i.parentId){var o="";t.productRepository.get(i.parentId,Shopware.Context.api,t.productCriteria).then((function(n){o+=n.translated.name?n.translated.name:n.group.name,null!=i.options&&(o+=" ( ",i.options.forEach((function(t){o+=(t.group.translated.name?t.group.translated.name:t.group.name)+": "+(t.translated.name?t.translated.name:t.name)+" | "})),o=o.slice(0,-3),o+=" )"),t.productInfo.push({quantity:t.abo.quantity+" x",name:o,productNumber:i.productNumber,unitPrice:null!=i.price?lt(i.price[0].gross,e.order.currency.shortName):lt(n.price[0].gross,e.order.currency.shortName),totalPrice:null!=i.price?lt(i.price[0].gross*t.abo.quantity,e.order.currency.shortName):lt(n.price[0].gross*t.abo.quantity,e.order.currency.shortName)})}))}else t.productInfo.push({quantity:t.abo.quantity+" x",name:i.translated.name,productNumber:i.productNumber,unitPrice:lt(i.price[0].gross,e.order.currency.shortName),totalPrice:lt(i.price[0].gross*t.abo.quantity,e.order.currency.shortName)});null!=t.abo.payment_method.customFields&&null!=t.abo.payment_method.customFields.novalnet_payment_method_name&&"novalnetpay"==t.abo.payment_method.customFields.novalnet_payment_method_name?t.NovalPaymentSubsService.getNovalnetOrderPaymentName(t.abo.order.orderNumber).then((function(e){var n;""!=e.paymentName&&null!=e.paymentName?t.paymentName=e.paymentName:t.paymentName=null!==(n=t.abo.payment_method.translated.name)&&void 0!==n?n:t.abo.payment_method.name})).catch((function(e){t.createNotificationError({message:"".concat(e.title,": ").concat(e.message)})})):t.paymentName=null!==(n=t.abo.payment_method.translated.name)&&void 0!==n?n:t.abo.payment_method.name;"ACTIVE"==t.abo.status&&(t.showCycleDate=!0),e.subsOrders.forEach((function(e){"RETRY"!=e.status&&"FAILURE"!=e.status&&"CANCELLED"!=e.status||"ACTIVE"==t.abo.status||(t.subsCycle=!0,"SUSPENDED"==t.abo.status?t.subOrderStatus=t.$tc("novalnet-subscription.status.suspended"):"CANCELLED"==t.abo.status?t.subOrderStatus=t.$tc("novalnet-subscription.status.cancelled"):t.subOrderStatus=t.abo.status)})),"ON_HOLD"==t.abo.status&&(t.onHold=!0),t.selectedActionName=t.abo.status.toLowerCase(),t.getSubscriptionStatus(),t.abo.order.lineItems.forEach((function(e){"product"==e.type&&e.id==t.abo.lineItemId&&t.lineItems.push(e)})),t.order=t.abo.order,t.order.lineItems=t.lineItems,t.salesChannelId=t.abo.order.salesChannelId,t.isLoading=!1})).catch((function(e){t.isLoading=!1})),this.userService.getUser().then((function(e){t.customerId=e.data.id}))},selectStyle:function(){return"sw-order-state-select__field--rounded"},backgroundStyle:function(){return"sw-order-state__danger-select"},showChangeNextCyle:function(){this.changeCycleDate=!0},getSubscriptionStatus:function(){var t=this,e=[];this.defaultStatus.forEach((function(n){e.push({id:n,name:t.$tc("novalnet-subscription.status."+n.toLowerCase()),disabled:!0})})),e.forEach((function(e){null!=t.possibleStatus()&&t.possibleStatus().includes(e.id)&&(e.disabled=!1)})),this.transitionOptions=e},getVariantFromOrderState:function(t){return"CANCELLED"==t||"EXPIRED"==t?"danger":"PENDING"==t||"ON_HOLD"==t?"info":"SUSPENDED"==t||"PENDING_CANCEL"==t?"warning":"success"},formatNNDate:function(t){if(t)return"".concat(t.getFullYear())},onStateChangeClicked:function(t){"pending"==this.selectedActionName||"pending_cancel"==this.selectedActionName?(this.actionToConfirm="pendingAbo",this.confirmButtonText=this.$tc("novalnet-subscription.detail.suspendLabel"),this.cancelReaonLabel=this.$tc("novalnet-subscription.detail.pendingReaon")):"suspended"==this.selectedActionName?(this.actionToConfirm="pauseAbo",this.confirmButtonText=this.$tc("novalnet-subscription.detail.suspendLabel"),this.cancelReaonLabel=this.$tc("novalnet-subscription.detail.suspendReaon")):"cancelled"==this.selectedActionName?(this.actionToConfirm="cancelAbo",this.confirmButtonText=this.$tc("novalnet-subscription.detail.cancelLabel"),this.cancelReaonLabel=this.$tc("novalnet-subscription.detail.cancelReaon")):"active"==this.selectedActionName&&(this.actionToConfirm="activeAbo",this.confirmButtonText=this.$tc("novalnet-subscription.detail.activeLabel"))},possibleStatus:function(){return"active"==this.selectedActionName?["active","suspended","on_hold","pending_cancel","cancelled","failed"]:"on_hold"==this.selectedActionName?["on_hold","active","suspended","cancelled","failed"]:"cancelled"==this.selectedActionName?["active","cancelled"]:"failed"==this.selectedActionName?["failed"]:"pending"==this.selectedActionName?["pending","active","pending_cancel","cancelled","failed"]:"suspended"==this.selectedActionName?["suspended","active","pending_cancel","cancelled"]:"pending_cancel"==this.selectedActionName?["pending_cancel","active","cancelled"]:"expired"==this.selectedActionName?["expired"]:void 0},closeModal:function(){this.actionToConfirm="",this.changeCycleDate=!1}}});var ct=Shopware.Component,ut=Shopware.Data.Criteria;ct.register("novalnet-subsctiption-overview-detail-transactions",{template:'<sw-card-view>\n    <sw-card :title="$tc(\'novalnet-subscription.order.orderHistory\')" v-if="!isLoading">\n        <sw-data-grid\n            :dataSource="orders"\n            :columns="gridColumns"\n            :showSelection="false"\n            :showActions="false">\n            \n            <template #column-subsOrders.cycles="{ item }">\n                <div v-if="item.cycles != \'null\' && item.cycles != 0">\n\t\t\t\t\t{{ item.cycles }}\n\t\t\t\t</div>\n\t\t\t\t<div v-else>\n\t\t\t\t\t{{ $tc(\'novalnet-subscription.order.freeTrial\') }}\n\t\t\t\t</div>\n            </template>\n            \n            <template #column-order.orderNumber="{ item }">\n                <div v-if="item.order">\n\t\t\t\t\t<router-link :to="{ name: \'sw.order.detail\', params: { id: item.orderId } }">\n\t\t\t\t\t\t{{ item.order.orderNumber }}\n\t\t\t\t\t</router-link>\n\t\t\t\t</div>\n\t\t\t\t<div v-else>\n\t\t\t\t\tNULL\n\t\t\t\t</div>\n            </template>\n            <template #column-subsOrders.status="{ item }">\n                <sw-label :variant="getVariantFromOrderState(item.status)" appearance="pill">\n                    {{ $tc(\'novalnet-subscription.status.\' + item.status.toLowerCase()) }}\n                </sw-label>\n            </template>\n            <template #column-subsOrders.cycleDate="{ item }">\n                <div v-if="item.cycleDate">\n\t\t\t\t\t{{ item.order.createdAt| date }}\n\t\t\t\t</div>\n\t\t\t\t<div v-else>\n\t\t\t\t\tNULL\n\t\t\t\t</div>\n            </template>\n        </sw-data-grid>\n    </sw-card>\n</sw-card-view>\n',inject:["repositoryFactory"],props:{aboId:{type:String,required:!0}},data:function(){return{abo:null,orders:[],transactions:null,isLoading:!0,versionContext:null}},created:function(){this.createdComponent()},computed:{aboRepository:function(){return this.repositoryFactory.create("novalnet_subscription")},gridColumns:function(){return this.getGridColumns()},hasTransactions:function(){return!!this.transactions&&this.transactions.length}},methods:{createdComponent:function(){var t=this;this.versionContext=Shopware.Context.api;var e=new ut;e.addAssociation("subsOrders"),e.addAssociation("subsOrders.order"),this.aboRepository.get(this.aboId,Shopware.Context.api,e).then((function(e){t.abo=e,t.abo.subsOrders.sort((function(t,e){return t.cycles-e.cycles})).forEach((function(e){null!=e.order&&null!=e.order&&t.orders.push(e)})),t.isLoading=!1})).catch((function(e){t.isLoading=!1}))},getVariantFromOrderState:function(t){return"FAILURE"==t||"CANCELLED"==t?"danger":"PENDING"==t?"info":"RETRY"==t?"warning":"success"},getGridColumns:function(){return[{property:"subsOrders.cycles",label:"novalnet-subscription.order.orderType"},{property:"order.orderNumber",label:"novalnet-subscription.order.orderNumber"},{property:"subsOrders.status",label:"novalnet-subscription.order.status"},{property:"subsOrders.cycleDate",label:"novalnet-subscription.order.orderDate"}]}}});var dt=Shopware,pt=(dt.Context,dt.Component);dt.Filter,dt.Utils,Shopware.Data.Criteria,Shopware.Utils.format.currency;pt.override("sw-order-detail-details",{template:'\n{% block sw_order_detail_details_custom_fields %}\n\t{% parent %}\n    <sw-card\n        v-if="isSubscription"\n        position-identifier="sw-order-detail-details-subscription-fields"\n        :title="$tc(\'novalnet-subscription.detail.associateSubscription\')"\n    >\n\t\t<sw-container v-for="abo in abos" class="novalnet_associate_subscription" columns="1fr 1fr" gap="10px">\n\t\t\t<sw-button :routerLink="{ name: \'novalnet.subsctiption.detail.base\', params: { id: abo.novalnetSubscription.id } }">\n\t\t\t\t{{ $tc(\'novalnet-subscription.detail.subscriptionButton\', 0, { subsNumber: abo.novalnetSubscription.subsNumber }) }}\n\t\t\t</sw-button>\n\t\t</sw-container>\n    </sw-card>\n{% endblock %}\n\n',inject:["NovalPaymentSubsService","repositoryFactory"],mixins:["notification"],props:{orderId:{type:String,required:!0},paymentDetails:{type:Object,required:!0}},data:function(){return{isLoading:!1,isSubscription:!1,abos:null}},watch:{orderId:{deep:!0,handler:function(){var t=this;this.orderId?this.isVerified||this.NovalPaymentSubsService.getSubsOrder(this.orderId).then((function(e){""!=e.subscriptions&&null!=e.subscriptions&&(t.isSubscription=!0,t.abos=e.subscriptions)})).catch((function(e){t.createNotificationError({message:"".concat(e.title,": ").concat(e.message)})})):this.isSubscription=!1},immediate:!0}}});n("dTje");var mt=Shopware.Component.getComponentHelper(),bt=(mt.mapPageErrors,mt.mapState,mt.mapGetters,Shopware);bt.Component,bt.Mixin,Shopware.Data.Criteria;Shopware.Component.override("sw-product-detail",{template:"{% block sw_product_detail_content_tabs_layout %}\n\n    {% parent %}\n    \n    <sw-tabs-item v-if=\"acl.can('novalnet_subscription_product.viewer')\" :route=\"{ name: 'sw.product.detail.novalnet.subscription', params: { id: $route.params.id } }\"  :title=\"$tc('novalnet-subscription.subscriptionSettings.cardTitle')\">\n        {{ $tc('novalnet-subscription.label') }}\n    </sw-tabs-item>\n{% endblock %}\n",inject:["repositoryFactory","NovalPaymentSubsService","acl"],methods:{onSave:function(){var t=this;"sw.product.detail.novalnet.subscription"==this.$route.name&&null!=this.product.extensions.novalnetConfiguration&&(null!=this.parentProduct.extensions&&null!=this.parentProduct.extensions.novalnetConfiguration?["active","type","period","interval","subscriptionLength","signUpFee","freeTrial","freeTrialPeriod","multipleSubscription","multiSubscriptionOptions","operationalMonth","discount","discountScope","discountType","detailPageText","predefinedSelection","discountDetails"].forEach((function(e){null!=t.product.extensions.novalnetConfiguration[e]&&null!=t.product.extensions.novalnetConfiguration[e]||null==t.parentProduct.extensions.novalnetConfiguration||(t.product.extensions.novalnetConfiguration[e]=t.parentProduct.extensions.novalnetConfiguration[e])})):(null==this.product.extensions.novalnetConfiguration.type&&(this.product.extensions.novalnetConfiguration.type="opt_abo"),null==this.product.extensions.novalnetConfiguration.predefinedSelection&&(this.product.extensions.novalnetConfiguration.predefinedSelection="subscription"),null==this.product.extensions.novalnetConfiguration.interval&&(this.product.extensions.novalnetConfiguration.interval=1),null==this.product.extensions.novalnetConfiguration.period&&(this.product.extensions.novalnetConfiguration.period="days"),null==this.product.extensions.novalnetConfiguration.freeTrial&&(this.product.extensions.novalnetConfiguration.freeTrial=0),null==this.product.extensions.novalnetConfiguration.freeTrialPeriod&&(this.product.extensions.novalnetConfiguration.freeTrialPeriod="days"),null==this.product.extensions.novalnetConfiguration.subscriptionLength&&(this.product.extensions.novalnetConfiguration.subscriptionLength=0),null==this.product.extensions.novalnetConfiguration.discount&&(this.product.extensions.novalnetConfiguration.discount=0),null==this.product.extensions.novalnetConfiguration.discountType&&(this.product.extensions.novalnetConfiguration.discountType="percentage"),null==this.product.extensions.novalnetConfiguration.discountScope&&(this.product.extensions.novalnetConfiguration.discountScope="all"),null!=this.product.extensions.novalnetConfiguration.multiSubscriptionOptions&&0==this.product.extensions.novalnetConfiguration.multiSubscriptionOptions.length&&(this.product.extensions.novalnetConfiguration.multiSubscriptionOptions=null))),this.$super("onSave")}}});n("LLI6");var ht=Shopware,vt=ht.Component,gt=ht.Mixin;ht.Filter,ht.Context,Shopware.Data.Criteria,Shopware.Utils.format.currency;vt.override("sw-order-detail-base",{template:'{% block sw_order_detail_customer_comment_card %}\n    {% parent %}\n    <template v-if="!isLoading" :isLoading="isLoading">\n\t\t<template v-if="isSubscription">\n\t\t\t<sw-card :title="$tc(\'novalnet-subscription.detail.associateSubscription\')">\n\t\t\t\t<sw-container v-for="abo in abos" class="novalnet_associate_subscription" columns="1fr 1fr" gap="10px">\n\t\t\t\t\t<sw-button :routerLink="{ name: \'novalnet.subsctiption.detail.base\', params: { id: abo.novalnetSubscription.id } }">\n\t\t\t\t\t\t{{ $tc(\'novalnet-subscription.detail.subscriptionButton\', 0, { subsNumber: abo.novalnetSubscription.subsNumber }) }}\n\t\t\t\t\t</sw-button>\n\t\t\t\t</sw-container>\n\t\t\t</sw-card>\n\t\t</template>\n    </template>\n{% endblock %}\n',inject:["repositoryFactory","NovalPaymentSubsService"],mixins:[gt.getByName("notification")],props:{orderId:{type:String,required:!0},paymentDetails:{type:Object,required:!0}},data:function(){return{isLoading:!1,isSubscription:!1,abos:null}},watch:{orderId:{deep:!0,handler:function(){var t=this;this.orderId?this.isVerified||this.NovalPaymentSubsService.getSubsOrder(this.orderId).then((function(e){""!=e.subscriptions&&null!=e.subscriptions&&(t.isSubscription=!0,t.abos=e.subscriptions)})).catch((function(e){t.createNotificationError({message:"".concat(e.title,": ").concat(e.message)})})):this.isSubscription=!1},immediate:!0}}});Shopware.Component.override("sw-search-bar-item",{template:'{% block sw_search_bar_item_cms_page %}\n    {% parent %}\n\n    <router-link v-else-if="type === \'novalnet_subscription\'"\n                 v-bind:to="{ name: \'novalnet.subsctiption.orders.detail.base\', params: { id: item.id } }"\n                 ref="routerLink"\n                 class="sw-search-bar-item__link">\n        {% block sw_search_bar_item_novalnet_bar_label %}\n            <span class="sw-search-bar-item__label">\n                <sw-highlight-text v-bind:searchTerm="searchTerm"\n                                   v-bind:text="item.name">\n                </sw-highlight-text>\n            </span>\n        {% endblock %}\n    </router-link>\n{% endblock %}\n'});var ft=n("ONWt"),yt=n("SwYj");function wt(t){return(wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function St(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function xt(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?St(Object(n),!0).forEach((function(e){Ct(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):St(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Ct(t,e,n){return(e=function(t){var e=function(t,e){if("object"!==wt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,e||"default");if("object"!==wt(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===wt(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var _t=Shopware.Module,Pt=Shopware.Component.getComponentHelper(),Dt=(Pt.mapPropertyErrors,Pt.mapState);Pt.mapGetters;function Tt(t){return(Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function kt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Nt(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(o=i.key,r=void 0,r=function(t,e){if("object"!==Tt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,e||"default");if("object"!==Tt(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===Tt(r)?r:String(r)),i)}var o,r}function It(t,e){return(It=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function At(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,i=Ot(t);if(e){var o=Ot(this).constructor;n=Reflect.construct(i,arguments,o)}else n=i.apply(this,arguments);return $t(this,n)}}function $t(t,e){if(e&&("object"===Tt(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function Ot(t){return(Ot=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}_t.register("novalnet-subsctiption",{type:"plugin",name:"NovalnetSubscription",title:"novalnet-subscription.label",description:"novalnet-subscription.title",version:"2.2.2",targetVersion:"2.2.2",icon:"regular-shopping-bag-product",color:"#0082C8",entity:"novalnet_subscription",snippets:{"de-DE":ft,"en-GB":yt},routeMiddleware:function(t,e){"sw.product.detail"===e.name&&e.children.push({name:"sw.product.detail.novalnet.subscription",path:"/sw/product/detail/:id/novalnet-subscription",component:"sw-product-detail-novalnet-subscription",meta:{parentPath:"sw.product.index",privilege:"novalnet_subscription_product.viewer"}}),t(e)},routes:{list:{component:"novalnet-subsctiption-overview",path:"list",meta:{privilege:"novalnet_subscription.viewer",appSystem:{view:"list"}}},detail:{component:"novalnet-subsctiption-overview-detail",path:"detail/:id?",props:{default:function(t){return{aboId:t.params.id}}},meta:{privilege:"novalnet_subscription.viewer"},redirect:{name:"novalnet.subsctiption.detail.base"},children:{base:{component:"novalnet-subsctiption-overview-detail-base",path:"base",meta:{parentPath:"novalnet.subsctiption.list"}},transactions:{component:"novalnet-subsctiption-overview-detail-transactions",path:"transactions",meta:{parentPath:"novalnet.subsctiption.list"}}}}},navigation:[{label:"novalnet-subscription.label",color:"#0082C8",path:"novalnet.subsctiption.list",parent:"sw-order",icon:"regular-shopping-bag-product",position:100,privilege:"novalnet_subscription.viewer"}]}),Shopware.Component.override("sw-product-detail",{computed:xt(xt({},Dt("swProductDetail",["product","parentProduct","variants"])),{},{productCriteria:function(){var t=this.$super("productCriteria");return t.addAssociation("novalnetConfiguration"),t}})});var Et=Shopware.Classes.ApiService,Lt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&It(t,e)}(r,t);var e,n,i,o=At(r);function r(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"novalnet-subscription";return kt(this,r),o.call(this,t,e,n)}return e=r,(n=[{key:"getSubsOrder",value:function(t){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/getOrders"),{orderId:t},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"pauseSubscription",value:function(t,e,n){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/pauseSubs"),{aboId:t,cancelReason:e,customerId:n},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"renewalSubscription",value:function(t,e){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/renewal"),{aboId:t,length:e},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"manualExecutionSubscription",value:function(t){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/manualExecution"),{aboId:t},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"dateChange",value:function(t,e,n,i){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/dateChange"),{aboId:t,nextDate:e,reason:n,subOrders:i},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"cancel",value:function(t,e,n){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/cancel"),{aboId:t,cancelReason:e,customerId:n},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"active",value:function(t){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/active"),{aboId:t},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"updateProduct",value:function(t,e,n){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/updateProduct"),{aboId:t,productId:e,quantity:n},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"updateProductQuantity",value:function(t,e){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/updateProductQuantity"),{aboId:t,quantity:e},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"getNovalnetOrderPaymentName",value:function(t){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/NovalnetOrderPaymentName"),{orderNumber:t},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"novalnetDiscount",value:function(t,e,n,i){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/NovalnetProductDiscount"),{cycle:t,discountType:e,discountValue:n,product:i},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"discountUpdate",value:function(t,e,n,i,o){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/updateDiscount"),{cycle:t,discountType:e,discountValue:n,peroidTerm:i,productId:o},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}},{key:"discountDelete",value:function(t,e){return this.getBasicHeaders(),this.httpClient.post("_action/".concat(this.getApiBasePath(),"/DiscountDelete"),{item:t,productId:e},{headers:this.getBasicHeaders()}).then((function(t){return Et.handleResponse(t)}))}}])&&Nt(e.prototype,n),i&&Nt(e,i),Object.defineProperty(e,"prototype",{writable:!1}),r}(Et),Ft=Shopware.Application;Ft.addServiceProvider("NovalPaymentSubsService",(function(t){var e=Ft.getContainer("init");return new Lt(e.httpClient,t.loginService)}));n("f6VJ")},EEy3:function(t,e,n){},LLI6:function(t,e,n){var i=n("qsDS");i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,n("ydqr").default)("0c1058b3",i,!0,{})},ONWt:function(t){t.exports=JSON.parse('{"novalnet-subscription":{"label":"Abonnements","title":"Einstellungen für Abonnements","searchPlaceholder":"Abos durchsuchen","subscriptionInfo":"Verwalten Sie Produktabonnements, damit Kunden Produkte für einen bestimmten Zeitraum abonnieren können. Diese können dem Kunden zu ermäßigten Preisen angeboten werden, um sie zum Abschluss von Abonnements zu ermutigen.","settingForm":{"subscriptionTitle":"Modus des Abonnements","intervalTitle":"Intervall-Einstellungen","discountTitle":"Einstellungen für Abonnement-Rabatte","updatedDiscountTitle":"Einstellungen für Abonnement-Rabatte","warning":"Warnung","period":"Art der Rabattperiode","productSettings":{"enableSubscriptionTitle":"Abonnement freischalten","productPurchaseTitle":"Dieses Produkt in ein abonnementbasiertes Produkt umwandeln","productPredefinedTitle":"Wählen Sie die vordefinierte Option für die Produktdetailseite","displayNameTitle":"Name anzeigen","displayNameHelpText":"Der eingegebene Name wird in den Produktbearbeitungsoptionen angezeigt.","productOption1":"Abonnement und einmaliger Kauf","productOption2":"Nur Abonnement","subsPredefinedOptions1":"Abonnement-Produkt","subsPredefinedOptions2":"Standard Produkt","discountTypeOption1":"Prozentsatz","discountTypeOption2":"Absolut","discountScopeOption1":"Nur für die erste Wiederholung","discountScopeOption2":"Alle Recurrings","discountScopeOption3":"Nur bei letzter Wiederholung","discountScopeOption4":"Abonnementzeitraum","intervalLabel":"Abonnement-Intervall","multipleSelectionLabel":"Option Mehrfachabonnement","multipleSelectionHelpText":"Aktivieren Sie diese Option, um dem Endkunden die Möglichkeit eines Mehrfachabonnements anzuzeigen.","intervalPeriodLabel":"Abonnementzeitraum","intervalPeriodHelpText":"Wählen Sie den Abonnementzeitraum.","intervalPeriodPlaceholder":"Wählen Sie einen beliebigen Zeitraum","multipleIntervalPeriodHelpText":"Wählen Sie den Intervallzeitraum, der dem Endkunden auf der Produktdetailseite angezeigt werden soll.","dailyDelivery":"Täglich","weeklyDelivery":"Wöchentlich","Every2WeekDelivery":"Zweiwöchentlich","Every3WeekDelivery":"Alle 3 Wochen","Every6WeekDelivery":"Alle 6 Wochen","monthlyDelivery":"Monatlich","Every2MonthDelivery":"Zweimonatlich","Every3MonthDelivery":"Alle 3 Monate","Every4MonthDelivery":"Alle 4 Monate","Every9MonthDelivery":"Alle 9 Monate","halfYearlyDelivery":"Halbjährliche Lieferung","yearlyDelivery":"Jährliche Lieferung","durationOptions":"Optionen für die Abonnementdauer","every":"jede","every2":"jede 2","every3":"jede 3","every4":"jede 4","every5":"jede 5","every6":"jede 6","intervalPeriodDay":"tag","intervalPeriodWeek":"woch","intervalPeriodMonth":"monat","intervalPeriodYear":"jahr","daysSingleLabel":"tag","weeksSingleLabel":"woch","monthsSingleLabel":"monat","yearsSingleLabel":"jahr","daysLabel":"tage","weeksLabel":"woche","monthsLabel":"monate","yearsLabel":"jahre","neverExpires":"Niemals ablaufen","freeTrialEmpty":"Kostenloser Test nicht erlaubt","durationLabel":"Ablauf nach","durationMultipleLabel":"Dauer des Abonnements","durationMultipleHelpText":"Geben Sie die Anzahl der Wiederholungen ein, die auftreten sollen, und das Abonnement wird nach Ablauf der Abonnementdauer automatisch beendet. Der Zeitraum umfasst auch die kostenlose Testphase oder die Zeit vor der Synchronisierung des ersten Verlängerungsdatums.(<strong>Hinweis:</strong> Wenn das Feld leer ist, läuft das Abonnement endlos)","intervalHelpText":"Wählen Sie das regelmäßige Intervall für das Abonnement.","renewalIntervalHelpText":"Ausgewählte Intervallzeiträume werden für die folgenden wiederkehrenden Aufgaben verwendet.","durationHelpText":"Automatisches Beenden des Abonnements nach Ablauf des Abonnementzeitraums. Der Zeitraum umfasst auch eine eventuelle kostenlose Testphase oder die Zeit vor der Synchronisierung des ersten Verlängerungsdatums.","renewalDurationHelpText":"Das Abonnement läuft nach dieser Zeitspanne automatisch aus. Die kostenlose Testversion und der Betrag für die Ersteinrichtung werden nicht in den Verlängerungszeitraum einbezogen.","signUpFeeTitle":"Anmeldegebühr","signUpFeePlaceholder":"z.B. 5,90","signUpFeeHelpText":"Geben Sie einen Betrag an, der als Anmeldegebühr berechnet werden soll. Die Anmeldegebühr wird sofort berechnet, auch bei kostenlosem Testzeitraum.","freeTrialTitle":"Kostenlose Testphase","freeTrialPeriodTitle":"Kostenlose Probezeit","freeTrialPeriodHelptext":"Optional können Sie die erste Bestellung kostenlos anbieten und eine eventuelle Anmeldegebühr erheben. Der Testzeitraum darf nicht länger sein als: 31 Tage, 52 Wochen, 12 Monate","discountScopeTitle":"Rabatt gilt für","discountTypeTitle":"Art des Preisnachlasses","discountAmount":"Wert","discountScopeHelptext":"Geben Sie den Umfang des anzuwendenden Rabatts an","discountHelptext":"Geben Sie den Rabatt ein und wählen Sie aus, ob der Rabatt als Prozentsatz oder absolut angewendet werden soll","productPageText":"Beschreibungstext auf der Detailseite","productPageTextDescription":"Geben Sie den Text ein, der auf der Detailseite des Produkt angezeigt werden soll.","enableVarientsSubscriptionTitle":"Abonnement für Varianten aktivieren","inheritVarientsHelptext":" Aktivieren, um Abonnement für Produktvarianten anzubieten","addDiscountTitle":"Mehrere Rabatte zulassen","addDiscountbutton":"Rabatt sparen","updateDiscountbutton":"Aktualisieren sparen","edit":"Bearbeiten:","delete":"Löschen","discountSucess":"Rabattperiode wurde erfolgreich hinzugefügt","discountDelete":"Möchten Sie den Abo-Rabattzeitraum löschen?","discountUpdate":"Rabattperiode wurde erfolgreich aktualisiert","discountDeleteSuccess":"Rabattperiode wurde entfernt Erfolgreich","emptyError":"Bitte füllen Sie alle erforderlichen Felder aus."}},"list":{"subsctiptionOrders":"Bestellungen","messageEmpty":"Keine Aufträge","subscriptionOrderNumber":"Abonnement-Nummer","saleschannelName":"Vertriebskanal","customerName":"Name des Kunden","amount":"Betrag der Bestellung","status":"Zustand","intervalType":"Intervall","subscriptionLength":"Dauer des Abonnements","countItems":"Anzahl der Produkte","createdAt":"Erstellt","contextMenuView":"Siehe","contextMenuDelete":"Löschen","textDeleteConfirm":"Sind Sie sicher, dass Sie das Abonnement wirklich löschen wollen \\"{subsNumber}\\"?","buttonCancel":"Abbrechen","buttonDelete":"Löschen"},"detail":{"subscriptionNo":"Abo Nr","suspendLabel":"Aussetzen","cancelLabel":"Kündigen","activeLabel":"Aktiv","nextDate":"Nächstes Zyklusdatum","dateDescription":"Ermöglichen Sie den Endnutzern, das Abonnement am nächsten Zyklusdatum auf der Seite mit der Bestellhistorie zu kündigen.","reasonTitle":"Grund","reasonDescription":"Ermöglichen Sie den Endnutzern, das Abonnement am nächsten Zyklusdatum auf der Seite mit der Bestellhistorie zu kündigen.","renewalButton":"Erneuerung","editProductButton":"Produkt bearbeiten","manualRunButton":"Manuelle Ausführung","manualButton":"Weiter","manualExecution":"Manuelle Ausführung für wiederkehrende Zahlungen","endingDate":"Datum der Beendigung","lastExecutedLabel":"Letztes Ausführungsdatum","cancelReaon":"Kündigungsgrund","pendingReaon":"Ausstehend Grund","suspendReaon":"Grund für die Pausierung","overviewTab":"Übersicht","freeTrialLabel":"Kostenlose Testversion","currentPaymentLabel":"Aktuelle Zahlungsmethode","nextDebt":"Nächste Wiederholung","transactionsTab":"Transaktionen","confirmButton":"Bestätigen Sie","abortButton":"Zurück","cancelledAt":"Annulliert Datum","suspendedAt":"Ausgesetztes Datum","cancelledReason":"Abgebrochen Grund","suspendedReason":"Suspendiert Grund","deliveryIntervalLabel":"Lieferintervall","durationLabel":"Dauer","actionConfirm":"Sind Sie sicher?","manualRecurringConfirm":"Sind Sie sicher, dass Sie den nächsten wiederkehrenden Abrechnungszeitraum manuell starten wollen?","pendingNotice":"Der Status dieses Abonnements ist PENDING, d.h. es ist nicht abgeschlossen/erfolglos (Erstzahlung). Daher kann dieses Abonnement nicht gelöscht werden.","retryNotice":"Dieses Abonnement kann nicht ausgeführt werden aufgrund von Status der Bestellung `{reason}`. Dieses Abonnement kann nicht für den nächsten Abrechnungszyklus fortgesetzt werden.","onholdNotice":"Dieses Abonnement kann für den nächsten Abrechnungszyklus nicht fortgesetzt werden.","cardTitle":"Einzelheiten","renewalTitle":"Erneuerung des Abonnements","manualExecutionTitle":"Manuelle Ausführung für wiederkehrende Zahlungen","editProductTitle":"Produktdetails bearbeiten","productQuantity":"Menge","productTitle":"Produkt","statusLabel":"Zustand","customerLabel":"Kunde","initialOrder":"Ursprünglicher Auftrag","associateSubscription":"Zugehöriges Abonnement","orderButton":"Bestellung Nr. {orderNumber}","subscriptionButton":"Abonnement Nr. {subsNumber}","productLabel":"Produkte im Abonnement","cycleDate":"Zyklus Datum ändern"},"order":{"orderHistory":"Geschichte der Bestellung","orderNumber":"Bestellnummer","orderDate":"Date","status":"Zustand","orderType":"Zyklus","freeTrial":"Kostenlose Testversion","activeMessage":"Abonnement erfolgreich aktiviert","pendingMessage":"Abonnementstatus erfolgreich auf ausstehend geändert","cancelledMessage":"Abonnement erfolgreich gekündigt","suspendedMessage":"Abonnement erfolgreich ausgesetzt","manualOrderMessage":"Auftrag erfolgreich erstellt","productErrorMessage":"Die Produktmenge sollte größer als Null sein.","productUpdateMessage":"Produkt erfolgreich aktualisiert","cycleDateChange":"Nächstes Datum des Remissionszyklus erfolgreich geändert","renewalMessage":"Das Abonnement wurde erfolgreich verlängert, und der Kunde erhält nun regelmäßig Produkte."},"status":{"active":"Aktiv","pending":"Anhängig","expired":"Abgelaufen","on_hold":"Festhalten","cancelled":"Abgesagt","suspended":"Aufgehängt","pending_cancel":"Anhängig Abbrechen","success":"Erfolg","failure":"Versagen","failed":"Gescheitert","retry":"Wiederholung"},"intervals":{"endlessSubscription":"Endlose Abonnements","untilCanceled":"Bis zum Abbruch","weeks":"Woche(n)","months":"Monat(e)","days":"Tag(e)","years":"Jahr(e)","w":"Woche(n)","m":"Monat(e)","d":"Tag(e)","y":"Jahr(e)"},"subscriptionSettings":{"cardTitle":"Abo-Einstellungen"}},"global":{"entities":{"novalnet_subscription":"Abo | Abos"}},"sw-privileges":{"permissions":{"novalnet_subscription":{"label":"Novalnet-Abonnement-Bestellung"},"novalnet_subscription_product":{"label":"Novalnet-Abonnement-Produkt"}}}}')},SwYj:function(t){t.exports=JSON.parse('{"novalnet-subscription":{"label":"Subscription","title":"Subscription Configuration","searchPlaceholder":"search subscriptions","subscriptionInfo":"Manage product subscriptions to allow end-users to subscribe for products for certain period. Subscription products can be offered in discounted prices to end-users to encourage subscription purchases.","settingForm":{"subscriptionTitle":"Subscription mode","intervalTitle":"Interval Settings","discountTitle":"Subscription Discount settings","updatedDiscountTitle":"Subscription Discount settings","warning":"Warning","period":"Discount period type","productSettings":{"enableSubscriptionTitle":"Activate subscription","productPurchaseTitle":"Convert this product to a subscription based product","productPredefinedTitle":"Select the predefined option for the product detail page","displayNameTitle":"Display name","displayNameHelpText":"The entered name will be displayed in the product edit options.","productOption1":"Subscription & One-off purchase","productOption2":"Only subscription","productPredfinedOption1":"Standard ","subsPredefinedOptions1":"Subscription Product","subsPredefinedOptions2":"Standard Product","discountTypeOption1":"Percentage","discountTypeOption2":"Absolute","discountScopeOption1":"Only for first recurring","discountScopeOption2":"All recurrings","discountScopeOption3":"Only for last recurring","discountScopeOption4":"Subscription Period","intervalLabel":"Subscription Interval","multipleSelectionLabel":"Multiple Subscription Option","multipleSelectionHelpText":"Enable this option to show the multiple subscription possibility for the end customer.","intervalPeriodLabel":"Subscription Period","intervalPeriodHelpText":"Choose the subscription period.","intervalPeriodPlaceholder":"Select any one period","multipleIntervalPeriodHelpText":"Select the interval period that will be displayed to end customer in product detail page.","dailyDelivery":"Daily","weeklyDelivery":"Weekly","Every2WeekDelivery":"Biweekly","Every3WeekDelivery":"Every 3 Weeks","Every6WeekDelivery":"Every 6 Weeks","monthlyDelivery":"Monthly","Every2MonthDelivery":"Bimonthly","Every3MonthDelivery":"Every 3 Months","Every4MonthDelivery":"Every 4 Months","Every9MonthDelivery":"Every 9 Months","halfYearlyDelivery":"Half-Yearly","yearlyDelivery":"Yearly","durationOptions":"Subscription Duration Options","every":"every","every2":"every 2nd","every3":"every 3rd","every4":"every 4th","every5":"every 5th","every6":"every 6th","intervalPeriodDay":"day","intervalPeriodWeek":"week","intervalPeriodMonth":"month","intervalPeriodYear":"year","daysSingleLabel":"day","weeksSingleLabel":"week","monthsSingleLabel":"month","yearsSingleLabel":"year","daysLabel":"days","weeksLabel":"weeks","monthsLabel":"months","yearsLabel":"years","neverExpires":"Never expire","freeTrialEmpty":"Free trail not allowed","durationLabel":"Expire after","durationMultipleLabel":"Subscription Length","durationMultipleHelpText":"Enter the numbers of recurring to be occurs and it will be automatically terminate the subscription after the subscription period. The period here includes any free trial period or time provided before synchronising first renewal date.(<strong>Note:</strong> If the field is empty endless subscription will run)","intervalHelpText":"Choose the regular interval for the subscription.","renewalIntervalHelpText":"Selected interval periods will be used for the following recurring.","durationHelpText":"Automatically terminate the subscription after the subscription period. The period here includes any free trial period or time provided before synchronising first renewal date.","renewalDurationHelpText":"Automatically expire the subscription after this length of time. This will not include any free trial and initial setup amount in renewal period.","signUpFeeTitle":"Sign-up fee","signUpFeePlaceholder":"e.g. 5.90","signUpFeeHelpText":"Include an amount to be charged as a sign-up fee. The sign-up fee will be charged immediately, even if the product has a free trial.","freeTrialTitle":"Free trial","freeTrialPeriodTitle":"Free trial period","freeTrialPeriodHelptext":"You can optionally offer the first order for free with a sign-up fee, if any. The trial period cannot exceed: 31 days, 52 weeks, 12 months.","discountScopeTitle":"Discount applied for","discountTypeTitle":"Discount pricing type","discountAmount":"Value","discountScopeHelptext":"Enter the scope of the discount where it is to be applied","discountHelptext":"Enter the discount and select whether the discount should be applied as a percentage or absolute","productPageText":"Description text on detail page","productPageTextDescription":"Enter the text want to display in the product detail page","enableVarientsSubscriptionTitle":"Activate subscription for variants","inheritVarientsHelptext":"Activate to offer subscription for variants products","addDiscountTitle":"Allow multiple discounts","addDiscountbutton":"Save Discount","updateDiscountbutton":"Update Discount","edit":"Edit","delete":"Delete","discountSucess":"Discount period was added successfully.","discountDelete":"Do you want to delete the Subscription discount period?","discountUpdate":"Discount period was Updated Successfully","discountDeleteSuccess":"Discount period was removed Successfully  ","emptyError":"Please fill out all required fields."}},"list":{"subsctiptionOrders":"Orders","messageEmpty":"No Orders","subscriptionOrderNumber":"Subscription Number","customerName":"Customer name","saleschannelName":"Sales Channel","amount":"Order Amount","status":"Status","intervalType":"Interval","subscriptionLength":"Subscription Length","countItems":"Product Count","createdAt":"Created","contextMenuView":"View","contextMenuDelete":"Delete","textDeleteConfirm":"Are you sure you really want to delete the subscription \\"{subsNumber}\\"?","buttonCancel":"Cancel","buttonDelete":"Delete"},"detail":{"subscriptionNo":"Subscription No","suspendLabel":"Suspend","confirmButton":"Confirm","abortButton":"Back","renewalButton":"Renewal","editProductButton":"Edit Product","manualRunButton":"Manual Execution","manualButton":"Continue","manualExecution":"Manual execution for recurring payments","actionConfirm":"Are you sure you want to continue?","cycleDate":"Cycle Date Change","manualRecurringConfirm":"Are you sure you want to run the next recurring cycle manually?","cancelLabel":"Cancel","activeLabel":"Active","nextDate":"Next Cycle Date","dateDescription":"Allow end-users to cancel the subscription next cycle date, on the order-history page.","reasonTitle":"Reason","reasonDescription":"Allow end-users to cancel the subscription next cycle date, on the order-history page.","endingDate":"Ending Date","lastExecutedLabel":"Last Executed Date","cancelReaon":"Cancellation Reason","pendingReaon":"Pending Reason","suspendReaon":"Suspend Reason","overviewTab":"Overview","freeTrialLabel":"Free Trial","currentPaymentLabel":"Current Payment Method","nextDebt":"Next recurring","cancelledAt":"Cancelled Date","suspendedAt":"Suspended Date","cancelledReason":"Cancelled Reason","suspendedReason":"Suspended Reason","deliveryIntervalLabel":"Delivery Interval","durationLabel":"Duration","transactionsTab":"Transactions","pendingNotice":"This subscription status is PENDING, It is not completed/Unsuccessful (initial payment). So not able to delete this subscription.","retryNotice":"Unable to execute this subscription due to order status `{reason}`. This subscription cannot be continued for the next billing cycle.","onholdNotice":"This subscription cannot be continued for the next billing cycle.","cardTitle":"Details","renewalTitle":"Subscription Renewal","manualExecutionTitle":"Manual execution for recurring payments","editProductTitle":"Edit Product Details","productQuantity":"Quantity","productTitle":"Product","statusLabel":"Status","customerLabel":"Customer","initialOrder":"Initial order","associateSubscription":"Associated Subscription","orderButton":"Order no. {orderNumber}","subscriptionButton":"Subscription no. {subsNumber}","productLabel":"Subscription products"},"order":{"orderHistory":"Order history","orderNumber":"Order number","orderDate":"Date","status":"Status","orderType":"Cycle","freeTrial":"Free Trial","activeMessage":"Subscription activated successfully","pendingMessage":"Subscription status changed to pending successfully","cancelledMessage":"Subscription cancelled successfully","suspendedMessage":"Subscription suspended successfully","manualOrderMessage":"Order Created Successfully","productErrorMessage":"Product quantity should be greater than zero","productUpdateMessage":"Product Updated Successfully","cycleDateChange":"Next Remaing Cycle Date Changed Successfully","renewalMessage":"Subscription renewed successfully, hereafter customer will receive products regularly."},"status":{"active":"Active","expired":"Expired","on_hold":"On Hold","pending":"Pending","cancelled":"Cancelled","suspended":"Suspended","pending_cancel":"Pending Cancel","success":"Success","failure":"Failure","failed":"Failed","retry":"Retry"},"intervals":{"endlessSubscription":"Endless Subscriptions","untilCanceled":"Until Canceled","weeks":"Week(s)","months":"Month(s)","days":"Day(s)","years":"Year(s)","w":"Week(s)","m":"Month(s)","d":"Day(s)","y":"Year(s)"},"subscriptionSettings":{"cardTitle":"Subscription Settings"}},"global":{"entities":{"novalnet_subscription":"Subscription | Subscriptions"}},"sw-privileges":{"permissions":{"novalnet_subscription":{"label":"Novalnet Subscription Order"},"novalnet_subscription_product":{"label":"Novalnet Subscription Product"}}}}')},Tg5Z:function(t,e,n){var i=n("nH41");i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,n("ydqr").default)("70f76313",i,!0,{})},dTje:function(t,e){Shopware.Application.addServiceProviderDecorator("searchTypeService",(function(t){return t.upsertType("novalnet_subscription",{entityName:"novalnet_subscription",entityService:"NovalnetSubscriptionConfiguration",placeholderSnippet:"novalnet-subscription.searchPlaceholder",listingRoute:"novalnet.subscription.list"}),t}))},f6VJ:function(t,e){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"orders",key:"novalnet_subscription",roles:{viewer:{privileges:["novalnet_subscription:read","novalnet_subs_cycle:read"],dependencies:["order.viewer"]},editor:{privileges:["novalnet_subscription:update","novalnet_subs_cycle:update"],dependencies:["novalnet_subscription_order.viewer","order.editor"]},creator:{privileges:["novalnet_subscription:create","novalnet_subs_cycle:create"],dependencies:["novalnet_subscription_order.viewer","novalnet_subscription_order.editor","order.creator"]},deleter:{privileges:["novalnet_subscription:delete","novalnet_subs_cycle:delete"],dependencies:["novalnet_subscription_order.viewer"]}}}),Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"catalogues",key:"novalnet_subscription_product",roles:{viewer:{privileges:["novalnet_product_config:read"],dependencies:["product.viewer"]},editor:{privileges:["novalnet_product_config:update"],dependencies:["novalnet_subscription_product.viewer","product.editor"]},creator:{privileges:["novalnet_product_config:create"],dependencies:["novalnet_subscription_product.viewer","novalnet_subscription_product.editor","product.creator"]},deleter:{privileges:["novalnet_product_config:delete"],dependencies:["novalnet_subscription_product.viewer"]}}})},hvWm:function(t,e,n){var i=n("EEy3");i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,n("ydqr").default)("73bc1a69",i,!0,{})},nH41:function(t,e,n){},qsDS:function(t,e,n){},ydqr:function(t,e,n){"use strict";function i(t,e){for(var n=[],i={},o=0;o<e.length;o++){var r=e[o],s=r[0],a={id:t+":"+o,css:r[1],media:r[2],sourceMap:r[3]};i[s]?i[s].parts.push(a):n.push(i[s]={id:s,parts:[a]})}return n}n.r(e),n.d(e,"default",(function(){return b}));var o="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!o)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},s=o&&(document.head||document.getElementsByTagName("head")[0]),a=null,l=0,c=!1,u=function(){},d=null,p="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function b(t,e,n,o){c=n,d=o||{};var s=i(t,e);return h(s),function(e){for(var n=[],o=0;o<s.length;o++){var a=s[o];(l=r[a.id]).refs--,n.push(l)}e?h(s=i(t,e)):s=[];for(o=0;o<n.length;o++){var l;if(0===(l=n[o]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete r[l.id]}}}}function h(t){for(var e=0;e<t.length;e++){var n=t[e],i=r[n.id];if(i){i.refs++;for(var o=0;o<i.parts.length;o++)i.parts[o](n.parts[o]);for(;o<n.parts.length;o++)i.parts.push(g(n.parts[o]));i.parts.length>n.parts.length&&(i.parts.length=n.parts.length)}else{var s=[];for(o=0;o<n.parts.length;o++)s.push(g(n.parts[o]));r[n.id]={id:n.id,refs:1,parts:s}}}}function v(){var t=document.createElement("style");return t.type="text/css",s.appendChild(t),t}function g(t){var e,n,i=document.querySelector("style["+p+'~="'+t.id+'"]');if(i){if(c)return u;i.parentNode.removeChild(i)}if(m){var o=l++;i=a||(a=v()),e=w.bind(null,i,o,!1),n=w.bind(null,i,o,!0)}else i=v(),e=S.bind(null,i),n=function(){i.parentNode.removeChild(i)};return e(t),function(i){if(i){if(i.css===t.css&&i.media===t.media&&i.sourceMap===t.sourceMap)return;e(t=i)}else n()}}var f,y=(f=[],function(t,e){return f[t]=e,f.filter(Boolean).join("\n")});function w(t,e,n,i){var o=n?"":i.css;if(t.styleSheet)t.styleSheet.cssText=y(e,o);else{var r=document.createTextNode(o),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(r,s[e]):t.appendChild(r)}}function S(t,e){var n=e.css,i=e.media,o=e.sourceMap;if(i&&t.setAttribute("media",i),d.ssrId&&t.setAttribute(p,e.id),o&&(n+="\n/*# sourceURL="+o.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */"),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}});
//# sourceMappingURL=novalnet-subscription.js.map
